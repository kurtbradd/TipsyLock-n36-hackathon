// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Muse_v2.proto

package com.ix.basis.muse;

public final class MuseDataSerializer {
  private MuseDataSerializer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registry.add(com.ix.basis.muse.MuseDataSerializer.EEG.museData);
    registry.add(com.ix.basis.muse.MuseDataSerializer.MuseQuantization.museData);
    registry.add(com.ix.basis.muse.MuseDataSerializer.Accelerometer.museData);
    registry.add(com.ix.basis.muse.MuseDataSerializer.Annotation.museData);
    registry.add(com.ix.basis.muse.MuseDataSerializer.Battery.museData);
    registry.add(com.ix.basis.muse.MuseDataSerializer.MuseVersion.museData);
    registry.add(com.ix.basis.muse.MuseDataSerializer.MuseConfig.museData);
    registry.add(com.ix.basis.muse.MuseDataSerializer.DSP.museData);
  }
  public enum HeadLocations
      implements com.google.protobuf.ProtocolMessageEnum {
    NZ(0, 1),
    FP1(1, 2),
    FPZ(2, 3),
    FP2(3, 4),
    AF7(4, 5),
    AF3(5, 6),
    AFZ(6, 7),
    AF4(7, 8),
    AF8(8, 9),
    F9(9, 10),
    F7(10, 11),
    F5(11, 12),
    F3(12, 13),
    F1(13, 14),
    FZ(14, 15),
    F2(15, 16),
    F4(16, 17),
    F6(17, 18),
    F8(18, 19),
    F10(19, 20),
    FT9(20, 21),
    FT7(21, 22),
    FC5(22, 23),
    FC3(23, 24),
    FC1(24, 25),
    FCZ(25, 26),
    FC2(26, 27),
    FC4(27, 28),
    FC6(28, 29),
    FT8(29, 30),
    FT10(30, 31),
    A1(31, 32),
    T9(32, 33),
    T7(33, 34),
    C5(34, 35),
    C3(35, 36),
    C1(36, 37),
    CZ(37, 38),
    C2(38, 39),
    C4(39, 40),
    C6(40, 41),
    T8(41, 42),
    T10(42, 43),
    A2(43, 44),
    TP9(44, 45),
    TP7(45, 46),
    CP5(46, 47),
    CP3(47, 48),
    CP1(48, 49),
    CPZ(49, 50),
    CP2(50, 51),
    CP4(51, 52),
    CP6(52, 53),
    TP8(53, 54),
    TP10(54, 55),
    P9(55, 56),
    P7(56, 57),
    P5(57, 58),
    P3(58, 59),
    P1(59, 60),
    PZ(60, 61),
    P2(61, 62),
    P4(62, 63),
    P6(63, 64),
    P8(64, 65),
    P10(65, 66),
    PO7(66, 67),
    PO3(67, 68),
    POZ(68, 69),
    PO4(69, 70),
    PO8(70, 71),
    O1(71, 72),
    OZ(72, 73),
    O2(73, 74),
    IZ(74, 75),
    AUX1(75, 76),
    AUX2(76, 77),
    AUX3(77, 78),
    AUX4(78, 79),
    MUSE_LEFT_AUX(79, 80),
    MUSE_RIGHT_AUX(80, 81),
    ;
    
    public static final int NZ_VALUE = 1;
    public static final int FP1_VALUE = 2;
    public static final int FPZ_VALUE = 3;
    public static final int FP2_VALUE = 4;
    public static final int AF7_VALUE = 5;
    public static final int AF3_VALUE = 6;
    public static final int AFZ_VALUE = 7;
    public static final int AF4_VALUE = 8;
    public static final int AF8_VALUE = 9;
    public static final int F9_VALUE = 10;
    public static final int F7_VALUE = 11;
    public static final int F5_VALUE = 12;
    public static final int F3_VALUE = 13;
    public static final int F1_VALUE = 14;
    public static final int FZ_VALUE = 15;
    public static final int F2_VALUE = 16;
    public static final int F4_VALUE = 17;
    public static final int F6_VALUE = 18;
    public static final int F8_VALUE = 19;
    public static final int F10_VALUE = 20;
    public static final int FT9_VALUE = 21;
    public static final int FT7_VALUE = 22;
    public static final int FC5_VALUE = 23;
    public static final int FC3_VALUE = 24;
    public static final int FC1_VALUE = 25;
    public static final int FCZ_VALUE = 26;
    public static final int FC2_VALUE = 27;
    public static final int FC4_VALUE = 28;
    public static final int FC6_VALUE = 29;
    public static final int FT8_VALUE = 30;
    public static final int FT10_VALUE = 31;
    public static final int A1_VALUE = 32;
    public static final int T9_VALUE = 33;
    public static final int T7_VALUE = 34;
    public static final int C5_VALUE = 35;
    public static final int C3_VALUE = 36;
    public static final int C1_VALUE = 37;
    public static final int CZ_VALUE = 38;
    public static final int C2_VALUE = 39;
    public static final int C4_VALUE = 40;
    public static final int C6_VALUE = 41;
    public static final int T8_VALUE = 42;
    public static final int T10_VALUE = 43;
    public static final int A2_VALUE = 44;
    public static final int TP9_VALUE = 45;
    public static final int TP7_VALUE = 46;
    public static final int CP5_VALUE = 47;
    public static final int CP3_VALUE = 48;
    public static final int CP1_VALUE = 49;
    public static final int CPZ_VALUE = 50;
    public static final int CP2_VALUE = 51;
    public static final int CP4_VALUE = 52;
    public static final int CP6_VALUE = 53;
    public static final int TP8_VALUE = 54;
    public static final int TP10_VALUE = 55;
    public static final int P9_VALUE = 56;
    public static final int P7_VALUE = 57;
    public static final int P5_VALUE = 58;
    public static final int P3_VALUE = 59;
    public static final int P1_VALUE = 60;
    public static final int PZ_VALUE = 61;
    public static final int P2_VALUE = 62;
    public static final int P4_VALUE = 63;
    public static final int P6_VALUE = 64;
    public static final int P8_VALUE = 65;
    public static final int P10_VALUE = 66;
    public static final int PO7_VALUE = 67;
    public static final int PO3_VALUE = 68;
    public static final int POZ_VALUE = 69;
    public static final int PO4_VALUE = 70;
    public static final int PO8_VALUE = 71;
    public static final int O1_VALUE = 72;
    public static final int OZ_VALUE = 73;
    public static final int O2_VALUE = 74;
    public static final int IZ_VALUE = 75;
    public static final int AUX1_VALUE = 76;
    public static final int AUX2_VALUE = 77;
    public static final int AUX3_VALUE = 78;
    public static final int AUX4_VALUE = 79;
    public static final int MUSE_LEFT_AUX_VALUE = 80;
    public static final int MUSE_RIGHT_AUX_VALUE = 81;
    
    
    public final int getNumber() { return value; }
    
    public static HeadLocations valueOf(int value) {
      switch (value) {
        case 1: return NZ;
        case 2: return FP1;
        case 3: return FPZ;
        case 4: return FP2;
        case 5: return AF7;
        case 6: return AF3;
        case 7: return AFZ;
        case 8: return AF4;
        case 9: return AF8;
        case 10: return F9;
        case 11: return F7;
        case 12: return F5;
        case 13: return F3;
        case 14: return F1;
        case 15: return FZ;
        case 16: return F2;
        case 17: return F4;
        case 18: return F6;
        case 19: return F8;
        case 20: return F10;
        case 21: return FT9;
        case 22: return FT7;
        case 23: return FC5;
        case 24: return FC3;
        case 25: return FC1;
        case 26: return FCZ;
        case 27: return FC2;
        case 28: return FC4;
        case 29: return FC6;
        case 30: return FT8;
        case 31: return FT10;
        case 32: return A1;
        case 33: return T9;
        case 34: return T7;
        case 35: return C5;
        case 36: return C3;
        case 37: return C1;
        case 38: return CZ;
        case 39: return C2;
        case 40: return C4;
        case 41: return C6;
        case 42: return T8;
        case 43: return T10;
        case 44: return A2;
        case 45: return TP9;
        case 46: return TP7;
        case 47: return CP5;
        case 48: return CP3;
        case 49: return CP1;
        case 50: return CPZ;
        case 51: return CP2;
        case 52: return CP4;
        case 53: return CP6;
        case 54: return TP8;
        case 55: return TP10;
        case 56: return P9;
        case 57: return P7;
        case 58: return P5;
        case 59: return P3;
        case 60: return P1;
        case 61: return PZ;
        case 62: return P2;
        case 63: return P4;
        case 64: return P6;
        case 65: return P8;
        case 66: return P10;
        case 67: return PO7;
        case 68: return PO3;
        case 69: return POZ;
        case 70: return PO4;
        case 71: return PO8;
        case 72: return O1;
        case 73: return OZ;
        case 74: return O2;
        case 75: return IZ;
        case 76: return AUX1;
        case 77: return AUX2;
        case 78: return AUX3;
        case 79: return AUX4;
        case 80: return MUSE_LEFT_AUX;
        case 81: return MUSE_RIGHT_AUX;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<HeadLocations>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<HeadLocations>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HeadLocations>() {
            public HeadLocations findValueByNumber(int number) {
              return HeadLocations.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final HeadLocations[] VALUES = {
      NZ, FP1, FPZ, FP2, AF7, AF3, AFZ, AF4, AF8, F9, F7, F5, F3, F1, FZ, F2, F4, F6, F8, F10, FT9, FT7, FC5, FC3, FC1, FCZ, FC2, FC4, FC6, FT8, FT10, A1, T9, T7, C5, C3, C1, CZ, C2, C4, C6, T8, T10, A2, TP9, TP7, CP5, CP3, CP1, CPZ, CP2, CP4, CP6, TP8, TP10, P9, P7, P5, P3, P1, PZ, P2, P4, P6, P8, P10, PO7, PO3, POZ, PO4, PO8, O1, OZ, O2, IZ, AUX1, AUX2, AUX3, AUX4, MUSE_LEFT_AUX, MUSE_RIGHT_AUX, 
    };
    
    public static HeadLocations valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private HeadLocations(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:HeadLocations)
  }
  
  public enum EEGUnits
      implements com.google.protobuf.ProtocolMessageEnum {
    EEG_MICROVOLTS(0, 1),
    EEG_MUSE1_RAW(1, 2),
    ;
    
    public static final int EEG_MICROVOLTS_VALUE = 1;
    public static final int EEG_MUSE1_RAW_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static EEGUnits valueOf(int value) {
      switch (value) {
        case 1: return EEG_MICROVOLTS;
        case 2: return EEG_MUSE1_RAW;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<EEGUnits>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EEGUnits>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EEGUnits>() {
            public EEGUnits findValueByNumber(int number) {
              return EEGUnits.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final EEGUnits[] VALUES = {
      EEG_MICROVOLTS, EEG_MUSE1_RAW, 
    };
    
    public static EEGUnits valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private EEGUnits(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:EEGUnits)
  }
  
  public enum AccelerometerUnits
      implements com.google.protobuf.ProtocolMessageEnum {
    ACC_GFORCE(0, 1),
    ACC_MUSE1_RAW(1, 2),
    ;
    
    public static final int ACC_GFORCE_VALUE = 1;
    public static final int ACC_MUSE1_RAW_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static AccelerometerUnits valueOf(int value) {
      switch (value) {
        case 1: return ACC_GFORCE;
        case 2: return ACC_MUSE1_RAW;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<AccelerometerUnits>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AccelerometerUnits>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccelerometerUnits>() {
            public AccelerometerUnits findValueByNumber(int number) {
              return AccelerometerUnits.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.getDescriptor().getEnumTypes().get(2);
    }
    
    private static final AccelerometerUnits[] VALUES = {
      ACC_GFORCE, ACC_MUSE1_RAW, 
    };
    
    public static AccelerometerUnits valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private AccelerometerUnits(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:AccelerometerUnits)
  }
  
  public interface MuseDataCollectionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .MuseData collection = 1;
    java.util.List<com.ix.basis.muse.MuseDataSerializer.MuseData> 
        getCollectionList();
    com.ix.basis.muse.MuseDataSerializer.MuseData getCollection(int index);
    int getCollectionCount();
    java.util.List<? extends com.ix.basis.muse.MuseDataSerializer.MuseDataOrBuilder> 
        getCollectionOrBuilderList();
    com.ix.basis.muse.MuseDataSerializer.MuseDataOrBuilder getCollectionOrBuilder(
        int index);
  }
  public static final class MuseDataCollection extends
      com.google.protobuf.GeneratedMessage
      implements MuseDataCollectionOrBuilder {
    // Use MuseDataCollection.newBuilder() to construct.
    private MuseDataCollection(Builder builder) {
      super(builder);
    }
    private MuseDataCollection(boolean noInit) {}
    
    private static final MuseDataCollection defaultInstance;
    public static MuseDataCollection getDefaultInstance() {
      return defaultInstance;
    }
    
    public MuseDataCollection getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseDataCollection_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseDataCollection_fieldAccessorTable;
    }
    
    // repeated .MuseData collection = 1;
    public static final int COLLECTION_FIELD_NUMBER = 1;
    private java.util.List<com.ix.basis.muse.MuseDataSerializer.MuseData> collection_;
    public java.util.List<com.ix.basis.muse.MuseDataSerializer.MuseData> getCollectionList() {
      return collection_;
    }
    public java.util.List<? extends com.ix.basis.muse.MuseDataSerializer.MuseDataOrBuilder> 
        getCollectionOrBuilderList() {
      return collection_;
    }
    public int getCollectionCount() {
      return collection_.size();
    }
    public com.ix.basis.muse.MuseDataSerializer.MuseData getCollection(int index) {
      return collection_.get(index);
    }
    public com.ix.basis.muse.MuseDataSerializer.MuseDataOrBuilder getCollectionOrBuilder(
        int index) {
      return collection_.get(index);
    }
    
    private void initFields() {
      collection_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getCollectionCount(); i++) {
        if (!getCollection(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < collection_.size(); i++) {
        output.writeMessage(1, collection_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < collection_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, collection_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ix.basis.muse.MuseDataSerializer.MuseDataCollection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseDataCollection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseDataCollection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseDataCollection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseDataCollection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseDataCollection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseDataCollection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseDataCollection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseDataCollection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseDataCollection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ix.basis.muse.MuseDataSerializer.MuseDataCollection prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ix.basis.muse.MuseDataSerializer.MuseDataCollectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseDataCollection_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseDataCollection_fieldAccessorTable;
      }
      
      // Construct using com.ix.basis.muse.MuseDataSerializer.MuseDataCollection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCollectionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (collectionBuilder_ == null) {
          collection_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          collectionBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ix.basis.muse.MuseDataSerializer.MuseDataCollection.getDescriptor();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseDataCollection getDefaultInstanceForType() {
        return com.ix.basis.muse.MuseDataSerializer.MuseDataCollection.getDefaultInstance();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseDataCollection build() {
        com.ix.basis.muse.MuseDataSerializer.MuseDataCollection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ix.basis.muse.MuseDataSerializer.MuseDataCollection buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ix.basis.muse.MuseDataSerializer.MuseDataCollection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseDataCollection buildPartial() {
        com.ix.basis.muse.MuseDataSerializer.MuseDataCollection result = new com.ix.basis.muse.MuseDataSerializer.MuseDataCollection(this);
        int from_bitField0_ = bitField0_;
        if (collectionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            collection_ = java.util.Collections.unmodifiableList(collection_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.collection_ = collection_;
        } else {
          result.collection_ = collectionBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ix.basis.muse.MuseDataSerializer.MuseDataCollection) {
          return mergeFrom((com.ix.basis.muse.MuseDataSerializer.MuseDataCollection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ix.basis.muse.MuseDataSerializer.MuseDataCollection other) {
        if (other == com.ix.basis.muse.MuseDataSerializer.MuseDataCollection.getDefaultInstance()) return this;
        if (collectionBuilder_ == null) {
          if (!other.collection_.isEmpty()) {
            if (collection_.isEmpty()) {
              collection_ = other.collection_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCollectionIsMutable();
              collection_.addAll(other.collection_);
            }
            onChanged();
          }
        } else {
          if (!other.collection_.isEmpty()) {
            if (collectionBuilder_.isEmpty()) {
              collectionBuilder_.dispose();
              collectionBuilder_ = null;
              collection_ = other.collection_;
              bitField0_ = (bitField0_ & ~0x00000001);
              collectionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCollectionFieldBuilder() : null;
            } else {
              collectionBuilder_.addAllMessages(other.collection_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getCollectionCount(); i++) {
          if (!getCollection(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.ix.basis.muse.MuseDataSerializer.MuseData.Builder subBuilder = com.ix.basis.muse.MuseDataSerializer.MuseData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCollection(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .MuseData collection = 1;
      private java.util.List<com.ix.basis.muse.MuseDataSerializer.MuseData> collection_ =
        java.util.Collections.emptyList();
      private void ensureCollectionIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          collection_ = new java.util.ArrayList<com.ix.basis.muse.MuseDataSerializer.MuseData>(collection_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ix.basis.muse.MuseDataSerializer.MuseData, com.ix.basis.muse.MuseDataSerializer.MuseData.Builder, com.ix.basis.muse.MuseDataSerializer.MuseDataOrBuilder> collectionBuilder_;
      
      public java.util.List<com.ix.basis.muse.MuseDataSerializer.MuseData> getCollectionList() {
        if (collectionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(collection_);
        } else {
          return collectionBuilder_.getMessageList();
        }
      }
      public int getCollectionCount() {
        if (collectionBuilder_ == null) {
          return collection_.size();
        } else {
          return collectionBuilder_.getCount();
        }
      }
      public com.ix.basis.muse.MuseDataSerializer.MuseData getCollection(int index) {
        if (collectionBuilder_ == null) {
          return collection_.get(index);
        } else {
          return collectionBuilder_.getMessage(index);
        }
      }
      public Builder setCollection(
          int index, com.ix.basis.muse.MuseDataSerializer.MuseData value) {
        if (collectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCollectionIsMutable();
          collection_.set(index, value);
          onChanged();
        } else {
          collectionBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCollection(
          int index, com.ix.basis.muse.MuseDataSerializer.MuseData.Builder builderForValue) {
        if (collectionBuilder_ == null) {
          ensureCollectionIsMutable();
          collection_.set(index, builderForValue.build());
          onChanged();
        } else {
          collectionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCollection(com.ix.basis.muse.MuseDataSerializer.MuseData value) {
        if (collectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCollectionIsMutable();
          collection_.add(value);
          onChanged();
        } else {
          collectionBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCollection(
          int index, com.ix.basis.muse.MuseDataSerializer.MuseData value) {
        if (collectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCollectionIsMutable();
          collection_.add(index, value);
          onChanged();
        } else {
          collectionBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCollection(
          com.ix.basis.muse.MuseDataSerializer.MuseData.Builder builderForValue) {
        if (collectionBuilder_ == null) {
          ensureCollectionIsMutable();
          collection_.add(builderForValue.build());
          onChanged();
        } else {
          collectionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCollection(
          int index, com.ix.basis.muse.MuseDataSerializer.MuseData.Builder builderForValue) {
        if (collectionBuilder_ == null) {
          ensureCollectionIsMutable();
          collection_.add(index, builderForValue.build());
          onChanged();
        } else {
          collectionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCollection(
          java.lang.Iterable<? extends com.ix.basis.muse.MuseDataSerializer.MuseData> values) {
        if (collectionBuilder_ == null) {
          ensureCollectionIsMutable();
          super.addAll(values, collection_);
          onChanged();
        } else {
          collectionBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCollection() {
        if (collectionBuilder_ == null) {
          collection_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          collectionBuilder_.clear();
        }
        return this;
      }
      public Builder removeCollection(int index) {
        if (collectionBuilder_ == null) {
          ensureCollectionIsMutable();
          collection_.remove(index);
          onChanged();
        } else {
          collectionBuilder_.remove(index);
        }
        return this;
      }
      public com.ix.basis.muse.MuseDataSerializer.MuseData.Builder getCollectionBuilder(
          int index) {
        return getCollectionFieldBuilder().getBuilder(index);
      }
      public com.ix.basis.muse.MuseDataSerializer.MuseDataOrBuilder getCollectionOrBuilder(
          int index) {
        if (collectionBuilder_ == null) {
          return collection_.get(index);  } else {
          return collectionBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.ix.basis.muse.MuseDataSerializer.MuseDataOrBuilder> 
           getCollectionOrBuilderList() {
        if (collectionBuilder_ != null) {
          return collectionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(collection_);
        }
      }
      public com.ix.basis.muse.MuseDataSerializer.MuseData.Builder addCollectionBuilder() {
        return getCollectionFieldBuilder().addBuilder(
            com.ix.basis.muse.MuseDataSerializer.MuseData.getDefaultInstance());
      }
      public com.ix.basis.muse.MuseDataSerializer.MuseData.Builder addCollectionBuilder(
          int index) {
        return getCollectionFieldBuilder().addBuilder(
            index, com.ix.basis.muse.MuseDataSerializer.MuseData.getDefaultInstance());
      }
      public java.util.List<com.ix.basis.muse.MuseDataSerializer.MuseData.Builder> 
           getCollectionBuilderList() {
        return getCollectionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.ix.basis.muse.MuseDataSerializer.MuseData, com.ix.basis.muse.MuseDataSerializer.MuseData.Builder, com.ix.basis.muse.MuseDataSerializer.MuseDataOrBuilder> 
          getCollectionFieldBuilder() {
        if (collectionBuilder_ == null) {
          collectionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.ix.basis.muse.MuseDataSerializer.MuseData, com.ix.basis.muse.MuseDataSerializer.MuseData.Builder, com.ix.basis.muse.MuseDataSerializer.MuseDataOrBuilder>(
                  collection_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          collection_ = null;
        }
        return collectionBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:MuseDataCollection)
    }
    
    static {
      defaultInstance = new MuseDataCollection(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MuseDataCollection)
  }
  
  public interface MuseDataOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<MuseData> {
    
    // required double timestamp = 1;
    boolean hasTimestamp();
    double getTimestamp();
    
    // required .MuseData.Datatype datatype = 2;
    boolean hasDatatype();
    com.ix.basis.muse.MuseDataSerializer.MuseData.Datatype getDatatype();
    
    // optional uint64 config_id = 3;
    boolean hasConfigId();
    long getConfigId();
  }
  public static final class MuseData extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        MuseData> implements MuseDataOrBuilder {
    // Use MuseData.newBuilder() to construct.
    private MuseData(Builder builder) {
      super(builder);
    }
    private MuseData(boolean noInit) {}
    
    private static final MuseData defaultInstance;
    public static MuseData getDefaultInstance() {
      return defaultInstance;
    }
    
    public MuseData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseData_fieldAccessorTable;
    }
    
    public enum Datatype
        implements com.google.protobuf.ProtocolMessageEnum {
      EEG(0, 0),
      QUANT(1, 1),
      ACCEL(2, 2),
      BATTERY(3, 3),
      VERSION(4, 4),
      CONFIG(5, 5),
      ANNOTATION(6, 6),
      HISTOGRAM(7, 7),
      ALGVALUE(8, 8),
      DSP(9, 9),
      ;
      
      public static final int EEG_VALUE = 0;
      public static final int QUANT_VALUE = 1;
      public static final int ACCEL_VALUE = 2;
      public static final int BATTERY_VALUE = 3;
      public static final int VERSION_VALUE = 4;
      public static final int CONFIG_VALUE = 5;
      public static final int ANNOTATION_VALUE = 6;
      public static final int HISTOGRAM_VALUE = 7;
      public static final int ALGVALUE_VALUE = 8;
      public static final int DSP_VALUE = 9;
      
      
      public final int getNumber() { return value; }
      
      public static Datatype valueOf(int value) {
        switch (value) {
          case 0: return EEG;
          case 1: return QUANT;
          case 2: return ACCEL;
          case 3: return BATTERY;
          case 4: return VERSION;
          case 5: return CONFIG;
          case 6: return ANNOTATION;
          case 7: return HISTOGRAM;
          case 8: return ALGVALUE;
          case 9: return DSP;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Datatype>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Datatype>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Datatype>() {
              public Datatype findValueByNumber(int number) {
                return Datatype.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.ix.basis.muse.MuseDataSerializer.MuseData.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Datatype[] VALUES = {
        EEG, QUANT, ACCEL, BATTERY, VERSION, CONFIG, ANNOTATION, HISTOGRAM, ALGVALUE, DSP, 
      };
      
      public static Datatype valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private Datatype(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:MuseData.Datatype)
    }
    
    private int bitField0_;
    // required double timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private double timestamp_;
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public double getTimestamp() {
      return timestamp_;
    }
    
    // required .MuseData.Datatype datatype = 2;
    public static final int DATATYPE_FIELD_NUMBER = 2;
    private com.ix.basis.muse.MuseDataSerializer.MuseData.Datatype datatype_;
    public boolean hasDatatype() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.ix.basis.muse.MuseDataSerializer.MuseData.Datatype getDatatype() {
      return datatype_;
    }
    
    // optional uint64 config_id = 3;
    public static final int CONFIG_ID_FIELD_NUMBER = 3;
    private long configId_;
    public boolean hasConfigId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getConfigId() {
      return configId_;
    }
    
    private void initFields() {
      timestamp_ = 0D;
      datatype_ = com.ix.basis.muse.MuseDataSerializer.MuseData.Datatype.EEG;
      configId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDatatype()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<com.ix.basis.muse.MuseDataSerializer.MuseData>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, datatype_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, configId_);
      }
      extensionWriter.writeUntil(1000, output);
      extensionWriter.writeUntil(2048, output);
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, datatype_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, configId_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ix.basis.muse.MuseDataSerializer.MuseData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ix.basis.muse.MuseDataSerializer.MuseData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          com.ix.basis.muse.MuseDataSerializer.MuseData, Builder> implements com.ix.basis.muse.MuseDataSerializer.MuseDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseData_fieldAccessorTable;
      }
      
      // Construct using com.ix.basis.muse.MuseDataSerializer.MuseData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        datatype_ = com.ix.basis.muse.MuseDataSerializer.MuseData.Datatype.EEG;
        bitField0_ = (bitField0_ & ~0x00000002);
        configId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ix.basis.muse.MuseDataSerializer.MuseData.getDescriptor();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseData getDefaultInstanceForType() {
        return com.ix.basis.muse.MuseDataSerializer.MuseData.getDefaultInstance();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseData build() {
        com.ix.basis.muse.MuseDataSerializer.MuseData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ix.basis.muse.MuseDataSerializer.MuseData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ix.basis.muse.MuseDataSerializer.MuseData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseData buildPartial() {
        com.ix.basis.muse.MuseDataSerializer.MuseData result = new com.ix.basis.muse.MuseDataSerializer.MuseData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.datatype_ = datatype_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.configId_ = configId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ix.basis.muse.MuseDataSerializer.MuseData) {
          return mergeFrom((com.ix.basis.muse.MuseDataSerializer.MuseData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ix.basis.muse.MuseDataSerializer.MuseData other) {
        if (other == com.ix.basis.muse.MuseDataSerializer.MuseData.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasDatatype()) {
          setDatatype(other.getDatatype());
        }
        if (other.hasConfigId()) {
          setConfigId(other.getConfigId());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasDatatype()) {
          
          return false;
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readDouble();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.ix.basis.muse.MuseDataSerializer.MuseData.Datatype value = com.ix.basis.muse.MuseDataSerializer.MuseData.Datatype.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                datatype_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              configId_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required double timestamp = 1;
      private double timestamp_ ;
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public double getTimestamp() {
        return timestamp_;
      }
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0D;
        onChanged();
        return this;
      }
      
      // required .MuseData.Datatype datatype = 2;
      private com.ix.basis.muse.MuseDataSerializer.MuseData.Datatype datatype_ = com.ix.basis.muse.MuseDataSerializer.MuseData.Datatype.EEG;
      public boolean hasDatatype() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.ix.basis.muse.MuseDataSerializer.MuseData.Datatype getDatatype() {
        return datatype_;
      }
      public Builder setDatatype(com.ix.basis.muse.MuseDataSerializer.MuseData.Datatype value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        datatype_ = value;
        onChanged();
        return this;
      }
      public Builder clearDatatype() {
        bitField0_ = (bitField0_ & ~0x00000002);
        datatype_ = com.ix.basis.muse.MuseDataSerializer.MuseData.Datatype.EEG;
        onChanged();
        return this;
      }
      
      // optional uint64 config_id = 3;
      private long configId_ ;
      public boolean hasConfigId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getConfigId() {
        return configId_;
      }
      public Builder setConfigId(long value) {
        bitField0_ |= 0x00000004;
        configId_ = value;
        onChanged();
        return this;
      }
      public Builder clearConfigId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        configId_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MuseData)
    }
    
    static {
      defaultInstance = new MuseData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MuseData)
  }
  
  public interface EEGOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated float values = 2;
    java.util.List<java.lang.Float> getValuesList();
    int getValuesCount();
    float getValues(int index);
    
    // optional float drl = 5;
    boolean hasDrl();
    float getDrl();
    
    // optional float ref = 6;
    boolean hasRef();
    float getRef();
  }
  public static final class EEG extends
      com.google.protobuf.GeneratedMessage
      implements EEGOrBuilder {
    // Use EEG.newBuilder() to construct.
    private EEG(Builder builder) {
      super(builder);
    }
    private EEG(boolean noInit) {}
    
    private static final EEG defaultInstance;
    public static EEG getDefaultInstance() {
      return defaultInstance;
    }
    
    public EEG getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_EEG_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_EEG_fieldAccessorTable;
    }
    
    private int bitField0_;
    // repeated float values = 2;
    public static final int VALUES_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> values_;
    public java.util.List<java.lang.Float>
        getValuesList() {
      return values_;
    }
    public int getValuesCount() {
      return values_.size();
    }
    public float getValues(int index) {
      return values_.get(index);
    }
    
    // optional float drl = 5;
    public static final int DRL_FIELD_NUMBER = 5;
    private float drl_;
    public boolean hasDrl() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getDrl() {
      return drl_;
    }
    
    // optional float ref = 6;
    public static final int REF_FIELD_NUMBER = 6;
    private float ref_;
    public boolean hasRef() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getRef() {
      return ref_;
    }
    
    private void initFields() {
      values_ = java.util.Collections.emptyList();;
      drl_ = 0F;
      ref_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < values_.size(); i++) {
        output.writeFloat(2, values_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(5, drl_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(6, ref_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getValuesList().size();
        size += dataSize;
        size += 1 * getValuesList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, drl_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, ref_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ix.basis.muse.MuseDataSerializer.EEG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.EEG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.EEG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.EEG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.EEG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.EEG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.EEG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.EEG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.EEG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.EEG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ix.basis.muse.MuseDataSerializer.EEG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ix.basis.muse.MuseDataSerializer.EEGOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_EEG_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_EEG_fieldAccessorTable;
      }
      
      // Construct using com.ix.basis.muse.MuseDataSerializer.EEG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        values_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        drl_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        ref_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ix.basis.muse.MuseDataSerializer.EEG.getDescriptor();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.EEG getDefaultInstanceForType() {
        return com.ix.basis.muse.MuseDataSerializer.EEG.getDefaultInstance();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.EEG build() {
        com.ix.basis.muse.MuseDataSerializer.EEG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ix.basis.muse.MuseDataSerializer.EEG buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ix.basis.muse.MuseDataSerializer.EEG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ix.basis.muse.MuseDataSerializer.EEG buildPartial() {
        com.ix.basis.muse.MuseDataSerializer.EEG result = new com.ix.basis.muse.MuseDataSerializer.EEG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = java.util.Collections.unmodifiableList(values_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.values_ = values_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.drl_ = drl_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ref_ = ref_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ix.basis.muse.MuseDataSerializer.EEG) {
          return mergeFrom((com.ix.basis.muse.MuseDataSerializer.EEG)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ix.basis.muse.MuseDataSerializer.EEG other) {
        if (other == com.ix.basis.muse.MuseDataSerializer.EEG.getDefaultInstance()) return this;
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        if (other.hasDrl()) {
          setDrl(other.getDrl());
        }
        if (other.hasRef()) {
          setRef(other.getRef());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 21: {
              ensureValuesIsMutable();
              values_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addValues(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 45: {
              bitField0_ |= 0x00000002;
              drl_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000004;
              ref_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated float values = 2;
      private java.util.List<java.lang.Float> values_ = java.util.Collections.emptyList();;
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = new java.util.ArrayList<java.lang.Float>(values_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Float>
          getValuesList() {
        return java.util.Collections.unmodifiableList(values_);
      }
      public int getValuesCount() {
        return values_.size();
      }
      public float getValues(int index) {
        return values_.get(index);
      }
      public Builder setValues(
          int index, float value) {
        ensureValuesIsMutable();
        values_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addValues(float value) {
        ensureValuesIsMutable();
        values_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureValuesIsMutable();
        super.addAll(values, values_);
        onChanged();
        return this;
      }
      public Builder clearValues() {
        values_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      
      // optional float drl = 5;
      private float drl_ ;
      public boolean hasDrl() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getDrl() {
        return drl_;
      }
      public Builder setDrl(float value) {
        bitField0_ |= 0x00000002;
        drl_ = value;
        onChanged();
        return this;
      }
      public Builder clearDrl() {
        bitField0_ = (bitField0_ & ~0x00000002);
        drl_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float ref = 6;
      private float ref_ ;
      public boolean hasRef() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getRef() {
        return ref_;
      }
      public Builder setRef(float value) {
        bitField0_ |= 0x00000004;
        ref_ = value;
        onChanged();
        return this;
      }
      public Builder clearRef() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ref_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EEG)
    }
    
    static {
      defaultInstance = new EEG(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EEG)
    public static final int MUSEDATA_FIELD_NUMBER = 8;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.ix.basis.muse.MuseDataSerializer.MuseData,
        com.ix.basis.muse.MuseDataSerializer.EEG> museData = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.ix.basis.muse.MuseDataSerializer.EEG.getDefaultInstance(),
          0,
          com.ix.basis.muse.MuseDataSerializer.EEG.class,
          com.ix.basis.muse.MuseDataSerializer.EEG.getDefaultInstance());
  }
  
  public interface MuseQuantizationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated uint32 values = 1;
    java.util.List<java.lang.Integer> getValuesList();
    int getValuesCount();
    int getValues(int index);
  }
  public static final class MuseQuantization extends
      com.google.protobuf.GeneratedMessage
      implements MuseQuantizationOrBuilder {
    // Use MuseQuantization.newBuilder() to construct.
    private MuseQuantization(Builder builder) {
      super(builder);
    }
    private MuseQuantization(boolean noInit) {}
    
    private static final MuseQuantization defaultInstance;
    public static MuseQuantization getDefaultInstance() {
      return defaultInstance;
    }
    
    public MuseQuantization getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseQuantization_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseQuantization_fieldAccessorTable;
    }
    
    // repeated uint32 values = 1;
    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> values_;
    public java.util.List<java.lang.Integer>
        getValuesList() {
      return values_;
    }
    public int getValuesCount() {
      return values_.size();
    }
    public int getValues(int index) {
      return values_.get(index);
    }
    
    private void initFields() {
      values_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < values_.size(); i++) {
        output.writeUInt32(1, values_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < values_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(values_.get(i));
        }
        size += dataSize;
        size += 1 * getValuesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ix.basis.muse.MuseDataSerializer.MuseQuantization parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseQuantization parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseQuantization parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseQuantization parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseQuantization parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseQuantization parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseQuantization parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseQuantization parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseQuantization parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseQuantization parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ix.basis.muse.MuseDataSerializer.MuseQuantization prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ix.basis.muse.MuseDataSerializer.MuseQuantizationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseQuantization_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseQuantization_fieldAccessorTable;
      }
      
      // Construct using com.ix.basis.muse.MuseDataSerializer.MuseQuantization.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        values_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ix.basis.muse.MuseDataSerializer.MuseQuantization.getDescriptor();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseQuantization getDefaultInstanceForType() {
        return com.ix.basis.muse.MuseDataSerializer.MuseQuantization.getDefaultInstance();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseQuantization build() {
        com.ix.basis.muse.MuseDataSerializer.MuseQuantization result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ix.basis.muse.MuseDataSerializer.MuseQuantization buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ix.basis.muse.MuseDataSerializer.MuseQuantization result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseQuantization buildPartial() {
        com.ix.basis.muse.MuseDataSerializer.MuseQuantization result = new com.ix.basis.muse.MuseDataSerializer.MuseQuantization(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = java.util.Collections.unmodifiableList(values_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ix.basis.muse.MuseDataSerializer.MuseQuantization) {
          return mergeFrom((com.ix.basis.muse.MuseDataSerializer.MuseQuantization)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ix.basis.muse.MuseDataSerializer.MuseQuantization other) {
        if (other == com.ix.basis.muse.MuseDataSerializer.MuseQuantization.getDefaultInstance()) return this;
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              ensureValuesIsMutable();
              values_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addValues(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated uint32 values = 1;
      private java.util.List<java.lang.Integer> values_ = java.util.Collections.emptyList();;
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = new java.util.ArrayList<java.lang.Integer>(values_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Integer>
          getValuesList() {
        return java.util.Collections.unmodifiableList(values_);
      }
      public int getValuesCount() {
        return values_.size();
      }
      public int getValues(int index) {
        return values_.get(index);
      }
      public Builder setValues(
          int index, int value) {
        ensureValuesIsMutable();
        values_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addValues(int value) {
        ensureValuesIsMutable();
        values_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValuesIsMutable();
        super.addAll(values, values_);
        onChanged();
        return this;
      }
      public Builder clearValues() {
        values_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MuseQuantization)
    }
    
    static {
      defaultInstance = new MuseQuantization(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MuseQuantization)
    public static final int MUSEDATA_FIELD_NUMBER = 9;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.ix.basis.muse.MuseDataSerializer.MuseData,
        com.ix.basis.muse.MuseDataSerializer.MuseQuantization> museData = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.ix.basis.muse.MuseDataSerializer.MuseQuantization.getDefaultInstance(),
          0,
          com.ix.basis.muse.MuseDataSerializer.MuseQuantization.class,
          com.ix.basis.muse.MuseDataSerializer.MuseQuantization.getDefaultInstance());
  }
  
  public interface AccelerometerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional float acc1 = 1;
    boolean hasAcc1();
    float getAcc1();
    
    // optional float acc2 = 2;
    boolean hasAcc2();
    float getAcc2();
    
    // optional float acc3 = 3;
    boolean hasAcc3();
    float getAcc3();
  }
  public static final class Accelerometer extends
      com.google.protobuf.GeneratedMessage
      implements AccelerometerOrBuilder {
    // Use Accelerometer.newBuilder() to construct.
    private Accelerometer(Builder builder) {
      super(builder);
    }
    private Accelerometer(boolean noInit) {}
    
    private static final Accelerometer defaultInstance;
    public static Accelerometer getDefaultInstance() {
      return defaultInstance;
    }
    
    public Accelerometer getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_Accelerometer_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_Accelerometer_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional float acc1 = 1;
    public static final int ACC1_FIELD_NUMBER = 1;
    private float acc1_;
    public boolean hasAcc1() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getAcc1() {
      return acc1_;
    }
    
    // optional float acc2 = 2;
    public static final int ACC2_FIELD_NUMBER = 2;
    private float acc2_;
    public boolean hasAcc2() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getAcc2() {
      return acc2_;
    }
    
    // optional float acc3 = 3;
    public static final int ACC3_FIELD_NUMBER = 3;
    private float acc3_;
    public boolean hasAcc3() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getAcc3() {
      return acc3_;
    }
    
    private void initFields() {
      acc1_ = 0F;
      acc2_ = 0F;
      acc3_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, acc1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, acc2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, acc3_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, acc1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, acc2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, acc3_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ix.basis.muse.MuseDataSerializer.Accelerometer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Accelerometer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Accelerometer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Accelerometer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Accelerometer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Accelerometer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Accelerometer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.Accelerometer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.Accelerometer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Accelerometer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ix.basis.muse.MuseDataSerializer.Accelerometer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ix.basis.muse.MuseDataSerializer.AccelerometerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_Accelerometer_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_Accelerometer_fieldAccessorTable;
      }
      
      // Construct using com.ix.basis.muse.MuseDataSerializer.Accelerometer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        acc1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        acc2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        acc3_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ix.basis.muse.MuseDataSerializer.Accelerometer.getDescriptor();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.Accelerometer getDefaultInstanceForType() {
        return com.ix.basis.muse.MuseDataSerializer.Accelerometer.getDefaultInstance();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.Accelerometer build() {
        com.ix.basis.muse.MuseDataSerializer.Accelerometer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ix.basis.muse.MuseDataSerializer.Accelerometer buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ix.basis.muse.MuseDataSerializer.Accelerometer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ix.basis.muse.MuseDataSerializer.Accelerometer buildPartial() {
        com.ix.basis.muse.MuseDataSerializer.Accelerometer result = new com.ix.basis.muse.MuseDataSerializer.Accelerometer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.acc1_ = acc1_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.acc2_ = acc2_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.acc3_ = acc3_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ix.basis.muse.MuseDataSerializer.Accelerometer) {
          return mergeFrom((com.ix.basis.muse.MuseDataSerializer.Accelerometer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ix.basis.muse.MuseDataSerializer.Accelerometer other) {
        if (other == com.ix.basis.muse.MuseDataSerializer.Accelerometer.getDefaultInstance()) return this;
        if (other.hasAcc1()) {
          setAcc1(other.getAcc1());
        }
        if (other.hasAcc2()) {
          setAcc2(other.getAcc2());
        }
        if (other.hasAcc3()) {
          setAcc3(other.getAcc3());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              acc1_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              acc2_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              acc3_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional float acc1 = 1;
      private float acc1_ ;
      public boolean hasAcc1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getAcc1() {
        return acc1_;
      }
      public Builder setAcc1(float value) {
        bitField0_ |= 0x00000001;
        acc1_ = value;
        onChanged();
        return this;
      }
      public Builder clearAcc1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        acc1_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float acc2 = 2;
      private float acc2_ ;
      public boolean hasAcc2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getAcc2() {
        return acc2_;
      }
      public Builder setAcc2(float value) {
        bitField0_ |= 0x00000002;
        acc2_ = value;
        onChanged();
        return this;
      }
      public Builder clearAcc2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        acc2_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float acc3 = 3;
      private float acc3_ ;
      public boolean hasAcc3() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getAcc3() {
        return acc3_;
      }
      public Builder setAcc3(float value) {
        bitField0_ |= 0x00000004;
        acc3_ = value;
        onChanged();
        return this;
      }
      public Builder clearAcc3() {
        bitField0_ = (bitField0_ & ~0x00000004);
        acc3_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Accelerometer)
    }
    
    static {
      defaultInstance = new Accelerometer(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Accelerometer)
    public static final int MUSEDATA_FIELD_NUMBER = 10;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.ix.basis.muse.MuseDataSerializer.MuseData,
        com.ix.basis.muse.MuseDataSerializer.Accelerometer> museData = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.ix.basis.muse.MuseDataSerializer.Accelerometer.getDefaultInstance(),
          0,
          com.ix.basis.muse.MuseDataSerializer.Accelerometer.class,
          com.ix.basis.muse.MuseDataSerializer.Accelerometer.getDefaultInstance());
  }
  
  public interface AnnotationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string event_data = 1;
    boolean hasEventData();
    String getEventData();
    
    // optional .Annotation.Format event_data_format = 2 [default = PLAIN_STRING];
    boolean hasEventDataFormat();
    com.ix.basis.muse.MuseDataSerializer.Annotation.Format getEventDataFormat();
    
    // optional string event_type = 3;
    boolean hasEventType();
    String getEventType();
    
    // optional string event_id = 4;
    boolean hasEventId();
    String getEventId();
    
    // optional string parent_id = 5;
    boolean hasParentId();
    String getParentId();
  }
  public static final class Annotation extends
      com.google.protobuf.GeneratedMessage
      implements AnnotationOrBuilder {
    // Use Annotation.newBuilder() to construct.
    private Annotation(Builder builder) {
      super(builder);
    }
    private Annotation(boolean noInit) {}
    
    private static final Annotation defaultInstance;
    public static Annotation getDefaultInstance() {
      return defaultInstance;
    }
    
    public Annotation getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_Annotation_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_Annotation_fieldAccessorTable;
    }
    
    public enum Format
        implements com.google.protobuf.ProtocolMessageEnum {
      PLAIN_STRING(0, 0),
      JSON(1, 1),
      OSC(2, 2),
      ;
      
      public static final int PLAIN_STRING_VALUE = 0;
      public static final int JSON_VALUE = 1;
      public static final int OSC_VALUE = 2;
      
      
      public final int getNumber() { return value; }
      
      public static Format valueOf(int value) {
        switch (value) {
          case 0: return PLAIN_STRING;
          case 1: return JSON;
          case 2: return OSC;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Format>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Format>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Format>() {
              public Format findValueByNumber(int number) {
                return Format.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.ix.basis.muse.MuseDataSerializer.Annotation.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Format[] VALUES = {
        PLAIN_STRING, JSON, OSC, 
      };
      
      public static Format valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private Format(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:Annotation.Format)
    }
    
    private int bitField0_;
    // optional string event_data = 1;
    public static final int EVENT_DATA_FIELD_NUMBER = 1;
    private java.lang.Object eventData_;
    public boolean hasEventData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getEventData() {
      java.lang.Object ref = eventData_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          eventData_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEventDataBytes() {
      java.lang.Object ref = eventData_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        eventData_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .Annotation.Format event_data_format = 2 [default = PLAIN_STRING];
    public static final int EVENT_DATA_FORMAT_FIELD_NUMBER = 2;
    private com.ix.basis.muse.MuseDataSerializer.Annotation.Format eventDataFormat_;
    public boolean hasEventDataFormat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.ix.basis.muse.MuseDataSerializer.Annotation.Format getEventDataFormat() {
      return eventDataFormat_;
    }
    
    // optional string event_type = 3;
    public static final int EVENT_TYPE_FIELD_NUMBER = 3;
    private java.lang.Object eventType_;
    public boolean hasEventType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getEventType() {
      java.lang.Object ref = eventType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          eventType_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEventTypeBytes() {
      java.lang.Object ref = eventType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        eventType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string event_id = 4;
    public static final int EVENT_ID_FIELD_NUMBER = 4;
    private java.lang.Object eventId_;
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getEventId() {
      java.lang.Object ref = eventId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          eventId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEventIdBytes() {
      java.lang.Object ref = eventId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        eventId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string parent_id = 5;
    public static final int PARENT_ID_FIELD_NUMBER = 5;
    private java.lang.Object parentId_;
    public boolean hasParentId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getParentId() {
      java.lang.Object ref = parentId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          parentId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getParentIdBytes() {
      java.lang.Object ref = parentId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        parentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      eventData_ = "";
      eventDataFormat_ = com.ix.basis.muse.MuseDataSerializer.Annotation.Format.PLAIN_STRING;
      eventType_ = "";
      eventId_ = "";
      parentId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getEventDataBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, eventDataFormat_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getEventTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getEventIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getParentIdBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getEventDataBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, eventDataFormat_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getEventTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getEventIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getParentIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ix.basis.muse.MuseDataSerializer.Annotation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Annotation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Annotation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Annotation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Annotation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Annotation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Annotation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.Annotation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.Annotation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Annotation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ix.basis.muse.MuseDataSerializer.Annotation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ix.basis.muse.MuseDataSerializer.AnnotationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_Annotation_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_Annotation_fieldAccessorTable;
      }
      
      // Construct using com.ix.basis.muse.MuseDataSerializer.Annotation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        eventData_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        eventDataFormat_ = com.ix.basis.muse.MuseDataSerializer.Annotation.Format.PLAIN_STRING;
        bitField0_ = (bitField0_ & ~0x00000002);
        eventType_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        eventId_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        parentId_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ix.basis.muse.MuseDataSerializer.Annotation.getDescriptor();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.Annotation getDefaultInstanceForType() {
        return com.ix.basis.muse.MuseDataSerializer.Annotation.getDefaultInstance();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.Annotation build() {
        com.ix.basis.muse.MuseDataSerializer.Annotation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ix.basis.muse.MuseDataSerializer.Annotation buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ix.basis.muse.MuseDataSerializer.Annotation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ix.basis.muse.MuseDataSerializer.Annotation buildPartial() {
        com.ix.basis.muse.MuseDataSerializer.Annotation result = new com.ix.basis.muse.MuseDataSerializer.Annotation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventData_ = eventData_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventDataFormat_ = eventDataFormat_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.eventType_ = eventType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.eventId_ = eventId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.parentId_ = parentId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ix.basis.muse.MuseDataSerializer.Annotation) {
          return mergeFrom((com.ix.basis.muse.MuseDataSerializer.Annotation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ix.basis.muse.MuseDataSerializer.Annotation other) {
        if (other == com.ix.basis.muse.MuseDataSerializer.Annotation.getDefaultInstance()) return this;
        if (other.hasEventData()) {
          setEventData(other.getEventData());
        }
        if (other.hasEventDataFormat()) {
          setEventDataFormat(other.getEventDataFormat());
        }
        if (other.hasEventType()) {
          setEventType(other.getEventType());
        }
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasParentId()) {
          setParentId(other.getParentId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              eventData_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.ix.basis.muse.MuseDataSerializer.Annotation.Format value = com.ix.basis.muse.MuseDataSerializer.Annotation.Format.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                eventDataFormat_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              eventType_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              eventId_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              parentId_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string event_data = 1;
      private java.lang.Object eventData_ = "";
      public boolean hasEventData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getEventData() {
        java.lang.Object ref = eventData_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          eventData_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEventData(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        eventData_ = value;
        onChanged();
        return this;
      }
      public Builder clearEventData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventData_ = getDefaultInstance().getEventData();
        onChanged();
        return this;
      }
      void setEventData(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        eventData_ = value;
        onChanged();
      }
      
      // optional .Annotation.Format event_data_format = 2 [default = PLAIN_STRING];
      private com.ix.basis.muse.MuseDataSerializer.Annotation.Format eventDataFormat_ = com.ix.basis.muse.MuseDataSerializer.Annotation.Format.PLAIN_STRING;
      public boolean hasEventDataFormat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.ix.basis.muse.MuseDataSerializer.Annotation.Format getEventDataFormat() {
        return eventDataFormat_;
      }
      public Builder setEventDataFormat(com.ix.basis.muse.MuseDataSerializer.Annotation.Format value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        eventDataFormat_ = value;
        onChanged();
        return this;
      }
      public Builder clearEventDataFormat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventDataFormat_ = com.ix.basis.muse.MuseDataSerializer.Annotation.Format.PLAIN_STRING;
        onChanged();
        return this;
      }
      
      // optional string event_type = 3;
      private java.lang.Object eventType_ = "";
      public boolean hasEventType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getEventType() {
        java.lang.Object ref = eventType_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          eventType_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEventType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        eventType_ = value;
        onChanged();
        return this;
      }
      public Builder clearEventType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eventType_ = getDefaultInstance().getEventType();
        onChanged();
        return this;
      }
      void setEventType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        eventType_ = value;
        onChanged();
      }
      
      // optional string event_id = 4;
      private java.lang.Object eventId_ = "";
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getEventId() {
        java.lang.Object ref = eventId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          eventId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEventId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        eventId_ = value;
        onChanged();
        return this;
      }
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eventId_ = getDefaultInstance().getEventId();
        onChanged();
        return this;
      }
      void setEventId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        eventId_ = value;
        onChanged();
      }
      
      // optional string parent_id = 5;
      private java.lang.Object parentId_ = "";
      public boolean hasParentId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getParentId() {
        java.lang.Object ref = parentId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          parentId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setParentId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        parentId_ = value;
        onChanged();
        return this;
      }
      public Builder clearParentId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        parentId_ = getDefaultInstance().getParentId();
        onChanged();
        return this;
      }
      void setParentId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        parentId_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:Annotation)
    }
    
    static {
      defaultInstance = new Annotation(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Annotation)
    public static final int MUSEDATA_FIELD_NUMBER = 100;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.ix.basis.muse.MuseDataSerializer.MuseData,
        com.ix.basis.muse.MuseDataSerializer.Annotation> museData = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.ix.basis.muse.MuseDataSerializer.Annotation.getDefaultInstance(),
          0,
          com.ix.basis.muse.MuseDataSerializer.Annotation.class,
          com.ix.basis.muse.MuseDataSerializer.Annotation.getDefaultInstance());
  }
  
  public interface BatteryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 percent_remaining = 1;
    boolean hasPercentRemaining();
    int getPercentRemaining();
    
    // optional uint32 battery_fuel_gauge_millivolts = 2;
    boolean hasBatteryFuelGaugeMillivolts();
    int getBatteryFuelGaugeMillivolts();
    
    // optional uint32 battery_adc_millivolts = 3;
    boolean hasBatteryAdcMillivolts();
    int getBatteryAdcMillivolts();
    
    // optional sint32 temperature_celsius = 4;
    boolean hasTemperatureCelsius();
    int getTemperatureCelsius();
  }
  public static final class Battery extends
      com.google.protobuf.GeneratedMessage
      implements BatteryOrBuilder {
    // Use Battery.newBuilder() to construct.
    private Battery(Builder builder) {
      super(builder);
    }
    private Battery(boolean noInit) {}
    
    private static final Battery defaultInstance;
    public static Battery getDefaultInstance() {
      return defaultInstance;
    }
    
    public Battery getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_Battery_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_Battery_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 percent_remaining = 1;
    public static final int PERCENT_REMAINING_FIELD_NUMBER = 1;
    private int percentRemaining_;
    public boolean hasPercentRemaining() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPercentRemaining() {
      return percentRemaining_;
    }
    
    // optional uint32 battery_fuel_gauge_millivolts = 2;
    public static final int BATTERY_FUEL_GAUGE_MILLIVOLTS_FIELD_NUMBER = 2;
    private int batteryFuelGaugeMillivolts_;
    public boolean hasBatteryFuelGaugeMillivolts() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getBatteryFuelGaugeMillivolts() {
      return batteryFuelGaugeMillivolts_;
    }
    
    // optional uint32 battery_adc_millivolts = 3;
    public static final int BATTERY_ADC_MILLIVOLTS_FIELD_NUMBER = 3;
    private int batteryAdcMillivolts_;
    public boolean hasBatteryAdcMillivolts() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getBatteryAdcMillivolts() {
      return batteryAdcMillivolts_;
    }
    
    // optional sint32 temperature_celsius = 4;
    public static final int TEMPERATURE_CELSIUS_FIELD_NUMBER = 4;
    private int temperatureCelsius_;
    public boolean hasTemperatureCelsius() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getTemperatureCelsius() {
      return temperatureCelsius_;
    }
    
    private void initFields() {
      percentRemaining_ = 0;
      batteryFuelGaugeMillivolts_ = 0;
      batteryAdcMillivolts_ = 0;
      temperatureCelsius_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, percentRemaining_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, batteryFuelGaugeMillivolts_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, batteryAdcMillivolts_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, temperatureCelsius_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, percentRemaining_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, batteryFuelGaugeMillivolts_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, batteryAdcMillivolts_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, temperatureCelsius_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ix.basis.muse.MuseDataSerializer.Battery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Battery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Battery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Battery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Battery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Battery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Battery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.Battery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.Battery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.Battery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ix.basis.muse.MuseDataSerializer.Battery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ix.basis.muse.MuseDataSerializer.BatteryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_Battery_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_Battery_fieldAccessorTable;
      }
      
      // Construct using com.ix.basis.muse.MuseDataSerializer.Battery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        percentRemaining_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        batteryFuelGaugeMillivolts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        batteryAdcMillivolts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        temperatureCelsius_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ix.basis.muse.MuseDataSerializer.Battery.getDescriptor();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.Battery getDefaultInstanceForType() {
        return com.ix.basis.muse.MuseDataSerializer.Battery.getDefaultInstance();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.Battery build() {
        com.ix.basis.muse.MuseDataSerializer.Battery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ix.basis.muse.MuseDataSerializer.Battery buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ix.basis.muse.MuseDataSerializer.Battery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ix.basis.muse.MuseDataSerializer.Battery buildPartial() {
        com.ix.basis.muse.MuseDataSerializer.Battery result = new com.ix.basis.muse.MuseDataSerializer.Battery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.percentRemaining_ = percentRemaining_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.batteryFuelGaugeMillivolts_ = batteryFuelGaugeMillivolts_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.batteryAdcMillivolts_ = batteryAdcMillivolts_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.temperatureCelsius_ = temperatureCelsius_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ix.basis.muse.MuseDataSerializer.Battery) {
          return mergeFrom((com.ix.basis.muse.MuseDataSerializer.Battery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ix.basis.muse.MuseDataSerializer.Battery other) {
        if (other == com.ix.basis.muse.MuseDataSerializer.Battery.getDefaultInstance()) return this;
        if (other.hasPercentRemaining()) {
          setPercentRemaining(other.getPercentRemaining());
        }
        if (other.hasBatteryFuelGaugeMillivolts()) {
          setBatteryFuelGaugeMillivolts(other.getBatteryFuelGaugeMillivolts());
        }
        if (other.hasBatteryAdcMillivolts()) {
          setBatteryAdcMillivolts(other.getBatteryAdcMillivolts());
        }
        if (other.hasTemperatureCelsius()) {
          setTemperatureCelsius(other.getTemperatureCelsius());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              percentRemaining_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              batteryFuelGaugeMillivolts_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              batteryAdcMillivolts_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              temperatureCelsius_ = input.readSInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 percent_remaining = 1;
      private int percentRemaining_ ;
      public boolean hasPercentRemaining() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPercentRemaining() {
        return percentRemaining_;
      }
      public Builder setPercentRemaining(int value) {
        bitField0_ |= 0x00000001;
        percentRemaining_ = value;
        onChanged();
        return this;
      }
      public Builder clearPercentRemaining() {
        bitField0_ = (bitField0_ & ~0x00000001);
        percentRemaining_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 battery_fuel_gauge_millivolts = 2;
      private int batteryFuelGaugeMillivolts_ ;
      public boolean hasBatteryFuelGaugeMillivolts() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getBatteryFuelGaugeMillivolts() {
        return batteryFuelGaugeMillivolts_;
      }
      public Builder setBatteryFuelGaugeMillivolts(int value) {
        bitField0_ |= 0x00000002;
        batteryFuelGaugeMillivolts_ = value;
        onChanged();
        return this;
      }
      public Builder clearBatteryFuelGaugeMillivolts() {
        bitField0_ = (bitField0_ & ~0x00000002);
        batteryFuelGaugeMillivolts_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 battery_adc_millivolts = 3;
      private int batteryAdcMillivolts_ ;
      public boolean hasBatteryAdcMillivolts() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getBatteryAdcMillivolts() {
        return batteryAdcMillivolts_;
      }
      public Builder setBatteryAdcMillivolts(int value) {
        bitField0_ |= 0x00000004;
        batteryAdcMillivolts_ = value;
        onChanged();
        return this;
      }
      public Builder clearBatteryAdcMillivolts() {
        bitField0_ = (bitField0_ & ~0x00000004);
        batteryAdcMillivolts_ = 0;
        onChanged();
        return this;
      }
      
      // optional sint32 temperature_celsius = 4;
      private int temperatureCelsius_ ;
      public boolean hasTemperatureCelsius() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getTemperatureCelsius() {
        return temperatureCelsius_;
      }
      public Builder setTemperatureCelsius(int value) {
        bitField0_ |= 0x00000008;
        temperatureCelsius_ = value;
        onChanged();
        return this;
      }
      public Builder clearTemperatureCelsius() {
        bitField0_ = (bitField0_ & ~0x00000008);
        temperatureCelsius_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Battery)
    }
    
    static {
      defaultInstance = new Battery(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Battery)
    public static final int MUSEDATA_FIELD_NUMBER = 101;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.ix.basis.muse.MuseDataSerializer.MuseData,
        com.ix.basis.muse.MuseDataSerializer.Battery> museData = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.ix.basis.muse.MuseDataSerializer.Battery.getDefaultInstance(),
          0,
          com.ix.basis.muse.MuseDataSerializer.Battery.class,
          com.ix.basis.muse.MuseDataSerializer.Battery.getDefaultInstance());
  }
  
  public interface MuseVersionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string hardware_version = 1;
    boolean hasHardwareVersion();
    String getHardwareVersion();
    
    // optional string firmware_headset_version = 2;
    boolean hasFirmwareHeadsetVersion();
    String getFirmwareHeadsetVersion();
    
    // optional string firmware_type = 3;
    boolean hasFirmwareType();
    String getFirmwareType();
    
    // optional string firmware_bootloader_version = 4;
    boolean hasFirmwareBootloaderVersion();
    String getFirmwareBootloaderVersion();
    
    // optional string build_number = 5;
    boolean hasBuildNumber();
    String getBuildNumber();
    
    // optional string protocol_version = 6;
    boolean hasProtocolVersion();
    String getProtocolVersion();
  }
  public static final class MuseVersion extends
      com.google.protobuf.GeneratedMessage
      implements MuseVersionOrBuilder {
    // Use MuseVersion.newBuilder() to construct.
    private MuseVersion(Builder builder) {
      super(builder);
    }
    private MuseVersion(boolean noInit) {}
    
    private static final MuseVersion defaultInstance;
    public static MuseVersion getDefaultInstance() {
      return defaultInstance;
    }
    
    public MuseVersion getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseVersion_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseVersion_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string hardware_version = 1;
    public static final int HARDWARE_VERSION_FIELD_NUMBER = 1;
    private java.lang.Object hardwareVersion_;
    public boolean hasHardwareVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getHardwareVersion() {
      java.lang.Object ref = hardwareVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          hardwareVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHardwareVersionBytes() {
      java.lang.Object ref = hardwareVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        hardwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string firmware_headset_version = 2;
    public static final int FIRMWARE_HEADSET_VERSION_FIELD_NUMBER = 2;
    private java.lang.Object firmwareHeadsetVersion_;
    public boolean hasFirmwareHeadsetVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getFirmwareHeadsetVersion() {
      java.lang.Object ref = firmwareHeadsetVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          firmwareHeadsetVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFirmwareHeadsetVersionBytes() {
      java.lang.Object ref = firmwareHeadsetVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        firmwareHeadsetVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string firmware_type = 3;
    public static final int FIRMWARE_TYPE_FIELD_NUMBER = 3;
    private java.lang.Object firmwareType_;
    public boolean hasFirmwareType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getFirmwareType() {
      java.lang.Object ref = firmwareType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          firmwareType_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFirmwareTypeBytes() {
      java.lang.Object ref = firmwareType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        firmwareType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string firmware_bootloader_version = 4;
    public static final int FIRMWARE_BOOTLOADER_VERSION_FIELD_NUMBER = 4;
    private java.lang.Object firmwareBootloaderVersion_;
    public boolean hasFirmwareBootloaderVersion() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getFirmwareBootloaderVersion() {
      java.lang.Object ref = firmwareBootloaderVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          firmwareBootloaderVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFirmwareBootloaderVersionBytes() {
      java.lang.Object ref = firmwareBootloaderVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        firmwareBootloaderVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string build_number = 5;
    public static final int BUILD_NUMBER_FIELD_NUMBER = 5;
    private java.lang.Object buildNumber_;
    public boolean hasBuildNumber() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getBuildNumber() {
      java.lang.Object ref = buildNumber_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          buildNumber_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getBuildNumberBytes() {
      java.lang.Object ref = buildNumber_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        buildNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string protocol_version = 6;
    public static final int PROTOCOL_VERSION_FIELD_NUMBER = 6;
    private java.lang.Object protocolVersion_;
    public boolean hasProtocolVersion() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getProtocolVersion() {
      java.lang.Object ref = protocolVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          protocolVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getProtocolVersionBytes() {
      java.lang.Object ref = protocolVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        protocolVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      hardwareVersion_ = "";
      firmwareHeadsetVersion_ = "";
      firmwareType_ = "";
      firmwareBootloaderVersion_ = "";
      buildNumber_ = "";
      protocolVersion_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHardwareVersionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFirmwareHeadsetVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFirmwareTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getFirmwareBootloaderVersionBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getBuildNumberBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getProtocolVersionBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHardwareVersionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFirmwareHeadsetVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFirmwareTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getFirmwareBootloaderVersionBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getBuildNumberBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getProtocolVersionBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ix.basis.muse.MuseDataSerializer.MuseVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ix.basis.muse.MuseDataSerializer.MuseVersion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ix.basis.muse.MuseDataSerializer.MuseVersionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseVersion_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseVersion_fieldAccessorTable;
      }
      
      // Construct using com.ix.basis.muse.MuseDataSerializer.MuseVersion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        hardwareVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        firmwareHeadsetVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        firmwareType_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        firmwareBootloaderVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        buildNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        protocolVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ix.basis.muse.MuseDataSerializer.MuseVersion.getDescriptor();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseVersion getDefaultInstanceForType() {
        return com.ix.basis.muse.MuseDataSerializer.MuseVersion.getDefaultInstance();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseVersion build() {
        com.ix.basis.muse.MuseDataSerializer.MuseVersion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ix.basis.muse.MuseDataSerializer.MuseVersion buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ix.basis.muse.MuseDataSerializer.MuseVersion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseVersion buildPartial() {
        com.ix.basis.muse.MuseDataSerializer.MuseVersion result = new com.ix.basis.muse.MuseDataSerializer.MuseVersion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hardwareVersion_ = hardwareVersion_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.firmwareHeadsetVersion_ = firmwareHeadsetVersion_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.firmwareType_ = firmwareType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.firmwareBootloaderVersion_ = firmwareBootloaderVersion_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.buildNumber_ = buildNumber_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.protocolVersion_ = protocolVersion_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ix.basis.muse.MuseDataSerializer.MuseVersion) {
          return mergeFrom((com.ix.basis.muse.MuseDataSerializer.MuseVersion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ix.basis.muse.MuseDataSerializer.MuseVersion other) {
        if (other == com.ix.basis.muse.MuseDataSerializer.MuseVersion.getDefaultInstance()) return this;
        if (other.hasHardwareVersion()) {
          setHardwareVersion(other.getHardwareVersion());
        }
        if (other.hasFirmwareHeadsetVersion()) {
          setFirmwareHeadsetVersion(other.getFirmwareHeadsetVersion());
        }
        if (other.hasFirmwareType()) {
          setFirmwareType(other.getFirmwareType());
        }
        if (other.hasFirmwareBootloaderVersion()) {
          setFirmwareBootloaderVersion(other.getFirmwareBootloaderVersion());
        }
        if (other.hasBuildNumber()) {
          setBuildNumber(other.getBuildNumber());
        }
        if (other.hasProtocolVersion()) {
          setProtocolVersion(other.getProtocolVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              hardwareVersion_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              firmwareHeadsetVersion_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              firmwareType_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              firmwareBootloaderVersion_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              buildNumber_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              protocolVersion_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string hardware_version = 1;
      private java.lang.Object hardwareVersion_ = "";
      public boolean hasHardwareVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getHardwareVersion() {
        java.lang.Object ref = hardwareVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          hardwareVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHardwareVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hardwareVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearHardwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hardwareVersion_ = getDefaultInstance().getHardwareVersion();
        onChanged();
        return this;
      }
      void setHardwareVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        hardwareVersion_ = value;
        onChanged();
      }
      
      // optional string firmware_headset_version = 2;
      private java.lang.Object firmwareHeadsetVersion_ = "";
      public boolean hasFirmwareHeadsetVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getFirmwareHeadsetVersion() {
        java.lang.Object ref = firmwareHeadsetVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          firmwareHeadsetVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFirmwareHeadsetVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        firmwareHeadsetVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearFirmwareHeadsetVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        firmwareHeadsetVersion_ = getDefaultInstance().getFirmwareHeadsetVersion();
        onChanged();
        return this;
      }
      void setFirmwareHeadsetVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        firmwareHeadsetVersion_ = value;
        onChanged();
      }
      
      // optional string firmware_type = 3;
      private java.lang.Object firmwareType_ = "";
      public boolean hasFirmwareType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getFirmwareType() {
        java.lang.Object ref = firmwareType_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          firmwareType_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFirmwareType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        firmwareType_ = value;
        onChanged();
        return this;
      }
      public Builder clearFirmwareType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        firmwareType_ = getDefaultInstance().getFirmwareType();
        onChanged();
        return this;
      }
      void setFirmwareType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        firmwareType_ = value;
        onChanged();
      }
      
      // optional string firmware_bootloader_version = 4;
      private java.lang.Object firmwareBootloaderVersion_ = "";
      public boolean hasFirmwareBootloaderVersion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getFirmwareBootloaderVersion() {
        java.lang.Object ref = firmwareBootloaderVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          firmwareBootloaderVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFirmwareBootloaderVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        firmwareBootloaderVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearFirmwareBootloaderVersion() {
        bitField0_ = (bitField0_ & ~0x00000008);
        firmwareBootloaderVersion_ = getDefaultInstance().getFirmwareBootloaderVersion();
        onChanged();
        return this;
      }
      void setFirmwareBootloaderVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        firmwareBootloaderVersion_ = value;
        onChanged();
      }
      
      // optional string build_number = 5;
      private java.lang.Object buildNumber_ = "";
      public boolean hasBuildNumber() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getBuildNumber() {
        java.lang.Object ref = buildNumber_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          buildNumber_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setBuildNumber(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        buildNumber_ = value;
        onChanged();
        return this;
      }
      public Builder clearBuildNumber() {
        bitField0_ = (bitField0_ & ~0x00000010);
        buildNumber_ = getDefaultInstance().getBuildNumber();
        onChanged();
        return this;
      }
      void setBuildNumber(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        buildNumber_ = value;
        onChanged();
      }
      
      // optional string protocol_version = 6;
      private java.lang.Object protocolVersion_ = "";
      public boolean hasProtocolVersion() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getProtocolVersion() {
        java.lang.Object ref = protocolVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          protocolVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setProtocolVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        protocolVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearProtocolVersion() {
        bitField0_ = (bitField0_ & ~0x00000020);
        protocolVersion_ = getDefaultInstance().getProtocolVersion();
        onChanged();
        return this;
      }
      void setProtocolVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        protocolVersion_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:MuseVersion)
    }
    
    static {
      defaultInstance = new MuseVersion(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MuseVersion)
    public static final int MUSEDATA_FIELD_NUMBER = 102;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.ix.basis.muse.MuseDataSerializer.MuseData,
        com.ix.basis.muse.MuseDataSerializer.MuseVersion> museData = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.ix.basis.muse.MuseDataSerializer.MuseVersion.getDefaultInstance(),
          0,
          com.ix.basis.muse.MuseDataSerializer.MuseVersion.class,
          com.ix.basis.muse.MuseDataSerializer.MuseVersion.getDefaultInstance());
  }
  
  public interface MuseConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string mac_addr = 1;
    boolean hasMacAddr();
    String getMacAddr();
    
    // optional string serial_number = 2;
    boolean hasSerialNumber();
    String getSerialNumber();
    
    // optional string preset = 3;
    boolean hasPreset();
    String getPreset();
    
    // optional bool compression_enabled = 100;
    boolean hasCompressionEnabled();
    boolean getCompressionEnabled();
    
    // optional bool filters_enabled = 201;
    boolean hasFiltersEnabled();
    boolean getFiltersEnabled();
    
    // optional uint32 notch_frequency_hz = 202;
    boolean hasNotchFrequencyHz();
    int getNotchFrequencyHz();
    
    // optional uint32 eeg_sample_frequency_hz = 203;
    boolean hasEegSampleFrequencyHz();
    int getEegSampleFrequencyHz();
    
    // optional uint32 eeg_output_frequency_hz = 204;
    boolean hasEegOutputFrequencyHz();
    int getEegOutputFrequencyHz();
    
    // optional uint32 eeg_samples_bitwidth = 205;
    boolean hasEegSamplesBitwidth();
    int getEegSamplesBitwidth();
    
    // optional uint32 eeg_channel_count = 206;
    boolean hasEegChannelCount();
    int getEegChannelCount();
    
    // optional string eeg_channel_layout = 207;
    boolean hasEegChannelLayout();
    String getEegChannelLayout();
    
    // optional uint32 eeg_downsample = 208;
    boolean hasEegDownsample();
    int getEegDownsample();
    
    // optional .EEGUnits eeg_units = 209;
    boolean hasEegUnits();
    com.ix.basis.muse.MuseDataSerializer.EEGUnits getEegUnits();
    
    // repeated .HeadLocations eeg_locations = 210;
    java.util.List<com.ix.basis.muse.MuseDataSerializer.HeadLocations> getEegLocationsList();
    int getEegLocationsCount();
    com.ix.basis.muse.MuseDataSerializer.HeadLocations getEegLocations(int index);
    
    // optional float eeg_conversion_factor = 211;
    boolean hasEegConversionFactor();
    float getEegConversionFactor();
    
    // optional float afe_gain = 212;
    boolean hasAfeGain();
    float getAfeGain();
    
    // optional bool drlref_data_enabled = 300;
    boolean hasDrlrefDataEnabled();
    boolean getDrlrefDataEnabled();
    
    // optional float drlref_conversion_factor = 301;
    boolean hasDrlrefConversionFactor();
    float getDrlrefConversionFactor();
    
    // optional uint32 drlref_sample_frequency_hz = 302;
    boolean hasDrlrefSampleFrequencyHz();
    int getDrlrefSampleFrequencyHz();
    
    // optional bool acc_data_enabled = 400;
    boolean hasAccDataEnabled();
    boolean getAccDataEnabled();
    
    // optional .AccelerometerUnits acc_units = 401;
    boolean hasAccUnits();
    com.ix.basis.muse.MuseDataSerializer.AccelerometerUnits getAccUnits();
    
    // optional float acc_conversion_factor = 402;
    boolean hasAccConversionFactor();
    float getAccConversionFactor();
    
    // optional uint32 acc_sample_frequency_hz = 403;
    boolean hasAccSampleFrequencyHz();
    int getAccSampleFrequencyHz();
    
    // optional bool battery_data_enabled = 500;
    boolean hasBatteryDataEnabled();
    boolean getBatteryDataEnabled();
    
    // optional uint32 battery_percent_remaining = 501;
    boolean hasBatteryPercentRemaining();
    int getBatteryPercentRemaining();
    
    // optional uint32 battery_millivolts = 502;
    boolean hasBatteryMillivolts();
    int getBatteryMillivolts();
    
    // optional bool error_data_enabled = 600;
    boolean hasErrorDataEnabled();
    boolean getErrorDataEnabled();
  }
  public static final class MuseConfig extends
      com.google.protobuf.GeneratedMessage
      implements MuseConfigOrBuilder {
    // Use MuseConfig.newBuilder() to construct.
    private MuseConfig(Builder builder) {
      super(builder);
    }
    private MuseConfig(boolean noInit) {}
    
    private static final MuseConfig defaultInstance;
    public static MuseConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public MuseConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseConfig_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string mac_addr = 1;
    public static final int MAC_ADDR_FIELD_NUMBER = 1;
    private java.lang.Object macAddr_;
    public boolean hasMacAddr() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMacAddr() {
      java.lang.Object ref = macAddr_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          macAddr_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMacAddrBytes() {
      java.lang.Object ref = macAddr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        macAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string serial_number = 2;
    public static final int SERIAL_NUMBER_FIELD_NUMBER = 2;
    private java.lang.Object serialNumber_;
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getSerialNumber() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          serialNumber_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSerialNumberBytes() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        serialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string preset = 3;
    public static final int PRESET_FIELD_NUMBER = 3;
    private java.lang.Object preset_;
    public boolean hasPreset() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getPreset() {
      java.lang.Object ref = preset_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          preset_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPresetBytes() {
      java.lang.Object ref = preset_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        preset_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool compression_enabled = 100;
    public static final int COMPRESSION_ENABLED_FIELD_NUMBER = 100;
    private boolean compressionEnabled_;
    public boolean hasCompressionEnabled() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getCompressionEnabled() {
      return compressionEnabled_;
    }
    
    // optional bool filters_enabled = 201;
    public static final int FILTERS_ENABLED_FIELD_NUMBER = 201;
    private boolean filtersEnabled_;
    public boolean hasFiltersEnabled() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getFiltersEnabled() {
      return filtersEnabled_;
    }
    
    // optional uint32 notch_frequency_hz = 202;
    public static final int NOTCH_FREQUENCY_HZ_FIELD_NUMBER = 202;
    private int notchFrequencyHz_;
    public boolean hasNotchFrequencyHz() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getNotchFrequencyHz() {
      return notchFrequencyHz_;
    }
    
    // optional uint32 eeg_sample_frequency_hz = 203;
    public static final int EEG_SAMPLE_FREQUENCY_HZ_FIELD_NUMBER = 203;
    private int eegSampleFrequencyHz_;
    public boolean hasEegSampleFrequencyHz() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getEegSampleFrequencyHz() {
      return eegSampleFrequencyHz_;
    }
    
    // optional uint32 eeg_output_frequency_hz = 204;
    public static final int EEG_OUTPUT_FREQUENCY_HZ_FIELD_NUMBER = 204;
    private int eegOutputFrequencyHz_;
    public boolean hasEegOutputFrequencyHz() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getEegOutputFrequencyHz() {
      return eegOutputFrequencyHz_;
    }
    
    // optional uint32 eeg_samples_bitwidth = 205;
    public static final int EEG_SAMPLES_BITWIDTH_FIELD_NUMBER = 205;
    private int eegSamplesBitwidth_;
    public boolean hasEegSamplesBitwidth() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getEegSamplesBitwidth() {
      return eegSamplesBitwidth_;
    }
    
    // optional uint32 eeg_channel_count = 206;
    public static final int EEG_CHANNEL_COUNT_FIELD_NUMBER = 206;
    private int eegChannelCount_;
    public boolean hasEegChannelCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getEegChannelCount() {
      return eegChannelCount_;
    }
    
    // optional string eeg_channel_layout = 207;
    public static final int EEG_CHANNEL_LAYOUT_FIELD_NUMBER = 207;
    private java.lang.Object eegChannelLayout_;
    public boolean hasEegChannelLayout() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public String getEegChannelLayout() {
      java.lang.Object ref = eegChannelLayout_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          eegChannelLayout_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEegChannelLayoutBytes() {
      java.lang.Object ref = eegChannelLayout_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        eegChannelLayout_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint32 eeg_downsample = 208;
    public static final int EEG_DOWNSAMPLE_FIELD_NUMBER = 208;
    private int eegDownsample_;
    public boolean hasEegDownsample() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getEegDownsample() {
      return eegDownsample_;
    }
    
    // optional .EEGUnits eeg_units = 209;
    public static final int EEG_UNITS_FIELD_NUMBER = 209;
    private com.ix.basis.muse.MuseDataSerializer.EEGUnits eegUnits_;
    public boolean hasEegUnits() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public com.ix.basis.muse.MuseDataSerializer.EEGUnits getEegUnits() {
      return eegUnits_;
    }
    
    // repeated .HeadLocations eeg_locations = 210;
    public static final int EEG_LOCATIONS_FIELD_NUMBER = 210;
    private java.util.List<com.ix.basis.muse.MuseDataSerializer.HeadLocations> eegLocations_;
    public java.util.List<com.ix.basis.muse.MuseDataSerializer.HeadLocations> getEegLocationsList() {
      return eegLocations_;
    }
    public int getEegLocationsCount() {
      return eegLocations_.size();
    }
    public com.ix.basis.muse.MuseDataSerializer.HeadLocations getEegLocations(int index) {
      return eegLocations_.get(index);
    }
    
    // optional float eeg_conversion_factor = 211;
    public static final int EEG_CONVERSION_FACTOR_FIELD_NUMBER = 211;
    private float eegConversionFactor_;
    public boolean hasEegConversionFactor() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public float getEegConversionFactor() {
      return eegConversionFactor_;
    }
    
    // optional float afe_gain = 212;
    public static final int AFE_GAIN_FIELD_NUMBER = 212;
    private float afeGain_;
    public boolean hasAfeGain() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public float getAfeGain() {
      return afeGain_;
    }
    
    // optional bool drlref_data_enabled = 300;
    public static final int DRLREF_DATA_ENABLED_FIELD_NUMBER = 300;
    private boolean drlrefDataEnabled_;
    public boolean hasDrlrefDataEnabled() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public boolean getDrlrefDataEnabled() {
      return drlrefDataEnabled_;
    }
    
    // optional float drlref_conversion_factor = 301;
    public static final int DRLREF_CONVERSION_FACTOR_FIELD_NUMBER = 301;
    private float drlrefConversionFactor_;
    public boolean hasDrlrefConversionFactor() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public float getDrlrefConversionFactor() {
      return drlrefConversionFactor_;
    }
    
    // optional uint32 drlref_sample_frequency_hz = 302;
    public static final int DRLREF_SAMPLE_FREQUENCY_HZ_FIELD_NUMBER = 302;
    private int drlrefSampleFrequencyHz_;
    public boolean hasDrlrefSampleFrequencyHz() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public int getDrlrefSampleFrequencyHz() {
      return drlrefSampleFrequencyHz_;
    }
    
    // optional bool acc_data_enabled = 400;
    public static final int ACC_DATA_ENABLED_FIELD_NUMBER = 400;
    private boolean accDataEnabled_;
    public boolean hasAccDataEnabled() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public boolean getAccDataEnabled() {
      return accDataEnabled_;
    }
    
    // optional .AccelerometerUnits acc_units = 401;
    public static final int ACC_UNITS_FIELD_NUMBER = 401;
    private com.ix.basis.muse.MuseDataSerializer.AccelerometerUnits accUnits_;
    public boolean hasAccUnits() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public com.ix.basis.muse.MuseDataSerializer.AccelerometerUnits getAccUnits() {
      return accUnits_;
    }
    
    // optional float acc_conversion_factor = 402;
    public static final int ACC_CONVERSION_FACTOR_FIELD_NUMBER = 402;
    private float accConversionFactor_;
    public boolean hasAccConversionFactor() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public float getAccConversionFactor() {
      return accConversionFactor_;
    }
    
    // optional uint32 acc_sample_frequency_hz = 403;
    public static final int ACC_SAMPLE_FREQUENCY_HZ_FIELD_NUMBER = 403;
    private int accSampleFrequencyHz_;
    public boolean hasAccSampleFrequencyHz() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public int getAccSampleFrequencyHz() {
      return accSampleFrequencyHz_;
    }
    
    // optional bool battery_data_enabled = 500;
    public static final int BATTERY_DATA_ENABLED_FIELD_NUMBER = 500;
    private boolean batteryDataEnabled_;
    public boolean hasBatteryDataEnabled() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    public boolean getBatteryDataEnabled() {
      return batteryDataEnabled_;
    }
    
    // optional uint32 battery_percent_remaining = 501;
    public static final int BATTERY_PERCENT_REMAINING_FIELD_NUMBER = 501;
    private int batteryPercentRemaining_;
    public boolean hasBatteryPercentRemaining() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    public int getBatteryPercentRemaining() {
      return batteryPercentRemaining_;
    }
    
    // optional uint32 battery_millivolts = 502;
    public static final int BATTERY_MILLIVOLTS_FIELD_NUMBER = 502;
    private int batteryMillivolts_;
    public boolean hasBatteryMillivolts() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    public int getBatteryMillivolts() {
      return batteryMillivolts_;
    }
    
    // optional bool error_data_enabled = 600;
    public static final int ERROR_DATA_ENABLED_FIELD_NUMBER = 600;
    private boolean errorDataEnabled_;
    public boolean hasErrorDataEnabled() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    public boolean getErrorDataEnabled() {
      return errorDataEnabled_;
    }
    
    private void initFields() {
      macAddr_ = "";
      serialNumber_ = "";
      preset_ = "";
      compressionEnabled_ = false;
      filtersEnabled_ = false;
      notchFrequencyHz_ = 0;
      eegSampleFrequencyHz_ = 0;
      eegOutputFrequencyHz_ = 0;
      eegSamplesBitwidth_ = 0;
      eegChannelCount_ = 0;
      eegChannelLayout_ = "";
      eegDownsample_ = 0;
      eegUnits_ = com.ix.basis.muse.MuseDataSerializer.EEGUnits.EEG_MICROVOLTS;
      eegLocations_ = java.util.Collections.emptyList();
      eegConversionFactor_ = 0F;
      afeGain_ = 0F;
      drlrefDataEnabled_ = false;
      drlrefConversionFactor_ = 0F;
      drlrefSampleFrequencyHz_ = 0;
      accDataEnabled_ = false;
      accUnits_ = com.ix.basis.muse.MuseDataSerializer.AccelerometerUnits.ACC_GFORCE;
      accConversionFactor_ = 0F;
      accSampleFrequencyHz_ = 0;
      batteryDataEnabled_ = false;
      batteryPercentRemaining_ = 0;
      batteryMillivolts_ = 0;
      errorDataEnabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMacAddrBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSerialNumberBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPresetBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(100, compressionEnabled_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(201, filtersEnabled_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(202, notchFrequencyHz_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(203, eegSampleFrequencyHz_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(204, eegOutputFrequencyHz_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(205, eegSamplesBitwidth_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(206, eegChannelCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(207, getEegChannelLayoutBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(208, eegDownsample_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeEnum(209, eegUnits_.getNumber());
      }
      for (int i = 0; i < eegLocations_.size(); i++) {
        output.writeEnum(210, eegLocations_.get(i).getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(211, eegConversionFactor_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(212, afeGain_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(300, drlrefDataEnabled_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeFloat(301, drlrefConversionFactor_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(302, drlrefSampleFrequencyHz_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(400, accDataEnabled_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeEnum(401, accUnits_.getNumber());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeFloat(402, accConversionFactor_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeUInt32(403, accSampleFrequencyHz_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeBool(500, batteryDataEnabled_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeUInt32(501, batteryPercentRemaining_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeUInt32(502, batteryMillivolts_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeBool(600, errorDataEnabled_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMacAddrBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSerialNumberBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPresetBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(100, compressionEnabled_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(201, filtersEnabled_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(202, notchFrequencyHz_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(203, eegSampleFrequencyHz_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(204, eegOutputFrequencyHz_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(205, eegSamplesBitwidth_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(206, eegChannelCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(207, getEegChannelLayoutBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(208, eegDownsample_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(209, eegUnits_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < eegLocations_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(eegLocations_.get(i).getNumber());
        }
        size += dataSize;
        size += 2 * eegLocations_.size();
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(211, eegConversionFactor_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(212, afeGain_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(300, drlrefDataEnabled_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(301, drlrefConversionFactor_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(302, drlrefSampleFrequencyHz_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(400, accDataEnabled_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(401, accUnits_.getNumber());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(402, accConversionFactor_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(403, accSampleFrequencyHz_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(500, batteryDataEnabled_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(501, batteryPercentRemaining_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(502, batteryMillivolts_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(600, errorDataEnabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ix.basis.muse.MuseDataSerializer.MuseConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.MuseConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ix.basis.muse.MuseDataSerializer.MuseConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ix.basis.muse.MuseDataSerializer.MuseConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseConfig_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_MuseConfig_fieldAccessorTable;
      }
      
      // Construct using com.ix.basis.muse.MuseDataSerializer.MuseConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        macAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        serialNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        preset_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        compressionEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        filtersEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        notchFrequencyHz_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        eegSampleFrequencyHz_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        eegOutputFrequencyHz_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        eegSamplesBitwidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        eegChannelCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        eegChannelLayout_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        eegDownsample_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        eegUnits_ = com.ix.basis.muse.MuseDataSerializer.EEGUnits.EEG_MICROVOLTS;
        bitField0_ = (bitField0_ & ~0x00001000);
        eegLocations_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        eegConversionFactor_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        afeGain_ = 0F;
        bitField0_ = (bitField0_ & ~0x00008000);
        drlrefDataEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00010000);
        drlrefConversionFactor_ = 0F;
        bitField0_ = (bitField0_ & ~0x00020000);
        drlrefSampleFrequencyHz_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        accDataEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00080000);
        accUnits_ = com.ix.basis.muse.MuseDataSerializer.AccelerometerUnits.ACC_GFORCE;
        bitField0_ = (bitField0_ & ~0x00100000);
        accConversionFactor_ = 0F;
        bitField0_ = (bitField0_ & ~0x00200000);
        accSampleFrequencyHz_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        batteryDataEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00800000);
        batteryPercentRemaining_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        batteryMillivolts_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        errorDataEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x04000000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ix.basis.muse.MuseDataSerializer.MuseConfig.getDescriptor();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseConfig getDefaultInstanceForType() {
        return com.ix.basis.muse.MuseDataSerializer.MuseConfig.getDefaultInstance();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseConfig build() {
        com.ix.basis.muse.MuseDataSerializer.MuseConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ix.basis.muse.MuseDataSerializer.MuseConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ix.basis.muse.MuseDataSerializer.MuseConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ix.basis.muse.MuseDataSerializer.MuseConfig buildPartial() {
        com.ix.basis.muse.MuseDataSerializer.MuseConfig result = new com.ix.basis.muse.MuseDataSerializer.MuseConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.macAddr_ = macAddr_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.preset_ = preset_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.compressionEnabled_ = compressionEnabled_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.filtersEnabled_ = filtersEnabled_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.notchFrequencyHz_ = notchFrequencyHz_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.eegSampleFrequencyHz_ = eegSampleFrequencyHz_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.eegOutputFrequencyHz_ = eegOutputFrequencyHz_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.eegSamplesBitwidth_ = eegSamplesBitwidth_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.eegChannelCount_ = eegChannelCount_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.eegChannelLayout_ = eegChannelLayout_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.eegDownsample_ = eegDownsample_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.eegUnits_ = eegUnits_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          eegLocations_ = java.util.Collections.unmodifiableList(eegLocations_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.eegLocations_ = eegLocations_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.eegConversionFactor_ = eegConversionFactor_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.afeGain_ = afeGain_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.drlrefDataEnabled_ = drlrefDataEnabled_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.drlrefConversionFactor_ = drlrefConversionFactor_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.drlrefSampleFrequencyHz_ = drlrefSampleFrequencyHz_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.accDataEnabled_ = accDataEnabled_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.accUnits_ = accUnits_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.accConversionFactor_ = accConversionFactor_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.accSampleFrequencyHz_ = accSampleFrequencyHz_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.batteryDataEnabled_ = batteryDataEnabled_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.batteryPercentRemaining_ = batteryPercentRemaining_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.batteryMillivolts_ = batteryMillivolts_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.errorDataEnabled_ = errorDataEnabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ix.basis.muse.MuseDataSerializer.MuseConfig) {
          return mergeFrom((com.ix.basis.muse.MuseDataSerializer.MuseConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ix.basis.muse.MuseDataSerializer.MuseConfig other) {
        if (other == com.ix.basis.muse.MuseDataSerializer.MuseConfig.getDefaultInstance()) return this;
        if (other.hasMacAddr()) {
          setMacAddr(other.getMacAddr());
        }
        if (other.hasSerialNumber()) {
          setSerialNumber(other.getSerialNumber());
        }
        if (other.hasPreset()) {
          setPreset(other.getPreset());
        }
        if (other.hasCompressionEnabled()) {
          setCompressionEnabled(other.getCompressionEnabled());
        }
        if (other.hasFiltersEnabled()) {
          setFiltersEnabled(other.getFiltersEnabled());
        }
        if (other.hasNotchFrequencyHz()) {
          setNotchFrequencyHz(other.getNotchFrequencyHz());
        }
        if (other.hasEegSampleFrequencyHz()) {
          setEegSampleFrequencyHz(other.getEegSampleFrequencyHz());
        }
        if (other.hasEegOutputFrequencyHz()) {
          setEegOutputFrequencyHz(other.getEegOutputFrequencyHz());
        }
        if (other.hasEegSamplesBitwidth()) {
          setEegSamplesBitwidth(other.getEegSamplesBitwidth());
        }
        if (other.hasEegChannelCount()) {
          setEegChannelCount(other.getEegChannelCount());
        }
        if (other.hasEegChannelLayout()) {
          setEegChannelLayout(other.getEegChannelLayout());
        }
        if (other.hasEegDownsample()) {
          setEegDownsample(other.getEegDownsample());
        }
        if (other.hasEegUnits()) {
          setEegUnits(other.getEegUnits());
        }
        if (!other.eegLocations_.isEmpty()) {
          if (eegLocations_.isEmpty()) {
            eegLocations_ = other.eegLocations_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureEegLocationsIsMutable();
            eegLocations_.addAll(other.eegLocations_);
          }
          onChanged();
        }
        if (other.hasEegConversionFactor()) {
          setEegConversionFactor(other.getEegConversionFactor());
        }
        if (other.hasAfeGain()) {
          setAfeGain(other.getAfeGain());
        }
        if (other.hasDrlrefDataEnabled()) {
          setDrlrefDataEnabled(other.getDrlrefDataEnabled());
        }
        if (other.hasDrlrefConversionFactor()) {
          setDrlrefConversionFactor(other.getDrlrefConversionFactor());
        }
        if (other.hasDrlrefSampleFrequencyHz()) {
          setDrlrefSampleFrequencyHz(other.getDrlrefSampleFrequencyHz());
        }
        if (other.hasAccDataEnabled()) {
          setAccDataEnabled(other.getAccDataEnabled());
        }
        if (other.hasAccUnits()) {
          setAccUnits(other.getAccUnits());
        }
        if (other.hasAccConversionFactor()) {
          setAccConversionFactor(other.getAccConversionFactor());
        }
        if (other.hasAccSampleFrequencyHz()) {
          setAccSampleFrequencyHz(other.getAccSampleFrequencyHz());
        }
        if (other.hasBatteryDataEnabled()) {
          setBatteryDataEnabled(other.getBatteryDataEnabled());
        }
        if (other.hasBatteryPercentRemaining()) {
          setBatteryPercentRemaining(other.getBatteryPercentRemaining());
        }
        if (other.hasBatteryMillivolts()) {
          setBatteryMillivolts(other.getBatteryMillivolts());
        }
        if (other.hasErrorDataEnabled()) {
          setErrorDataEnabled(other.getErrorDataEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              macAddr_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              serialNumber_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              preset_ = input.readBytes();
              break;
            }
            case 800: {
              bitField0_ |= 0x00000008;
              compressionEnabled_ = input.readBool();
              break;
            }
            case 1608: {
              bitField0_ |= 0x00000010;
              filtersEnabled_ = input.readBool();
              break;
            }
            case 1616: {
              bitField0_ |= 0x00000020;
              notchFrequencyHz_ = input.readUInt32();
              break;
            }
            case 1624: {
              bitField0_ |= 0x00000040;
              eegSampleFrequencyHz_ = input.readUInt32();
              break;
            }
            case 1632: {
              bitField0_ |= 0x00000080;
              eegOutputFrequencyHz_ = input.readUInt32();
              break;
            }
            case 1640: {
              bitField0_ |= 0x00000100;
              eegSamplesBitwidth_ = input.readUInt32();
              break;
            }
            case 1648: {
              bitField0_ |= 0x00000200;
              eegChannelCount_ = input.readUInt32();
              break;
            }
            case 1658: {
              bitField0_ |= 0x00000400;
              eegChannelLayout_ = input.readBytes();
              break;
            }
            case 1664: {
              bitField0_ |= 0x00000800;
              eegDownsample_ = input.readUInt32();
              break;
            }
            case 1672: {
              int rawValue = input.readEnum();
              com.ix.basis.muse.MuseDataSerializer.EEGUnits value = com.ix.basis.muse.MuseDataSerializer.EEGUnits.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(209, rawValue);
              } else {
                bitField0_ |= 0x00001000;
                eegUnits_ = value;
              }
              break;
            }
            case 1680: {
              int rawValue = input.readEnum();
              com.ix.basis.muse.MuseDataSerializer.HeadLocations value = com.ix.basis.muse.MuseDataSerializer.HeadLocations.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(210, rawValue);
              } else {
                addEegLocations(value);
              }
              break;
            }
            case 1682: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                com.ix.basis.muse.MuseDataSerializer.HeadLocations value = com.ix.basis.muse.MuseDataSerializer.HeadLocations.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(210, rawValue);
                } else {
                  addEegLocations(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 1693: {
              bitField0_ |= 0x00004000;
              eegConversionFactor_ = input.readFloat();
              break;
            }
            case 1701: {
              bitField0_ |= 0x00008000;
              afeGain_ = input.readFloat();
              break;
            }
            case 2400: {
              bitField0_ |= 0x00010000;
              drlrefDataEnabled_ = input.readBool();
              break;
            }
            case 2413: {
              bitField0_ |= 0x00020000;
              drlrefConversionFactor_ = input.readFloat();
              break;
            }
            case 2416: {
              bitField0_ |= 0x00040000;
              drlrefSampleFrequencyHz_ = input.readUInt32();
              break;
            }
            case 3200: {
              bitField0_ |= 0x00080000;
              accDataEnabled_ = input.readBool();
              break;
            }
            case 3208: {
              int rawValue = input.readEnum();
              com.ix.basis.muse.MuseDataSerializer.AccelerometerUnits value = com.ix.basis.muse.MuseDataSerializer.AccelerometerUnits.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(401, rawValue);
              } else {
                bitField0_ |= 0x00100000;
                accUnits_ = value;
              }
              break;
            }
            case 3221: {
              bitField0_ |= 0x00200000;
              accConversionFactor_ = input.readFloat();
              break;
            }
            case 3224: {
              bitField0_ |= 0x00400000;
              accSampleFrequencyHz_ = input.readUInt32();
              break;
            }
            case 4000: {
              bitField0_ |= 0x00800000;
              batteryDataEnabled_ = input.readBool();
              break;
            }
            case 4008: {
              bitField0_ |= 0x01000000;
              batteryPercentRemaining_ = input.readUInt32();
              break;
            }
            case 4016: {
              bitField0_ |= 0x02000000;
              batteryMillivolts_ = input.readUInt32();
              break;
            }
            case 4800: {
              bitField0_ |= 0x04000000;
              errorDataEnabled_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string mac_addr = 1;
      private java.lang.Object macAddr_ = "";
      public boolean hasMacAddr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMacAddr() {
        java.lang.Object ref = macAddr_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          macAddr_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMacAddr(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        macAddr_ = value;
        onChanged();
        return this;
      }
      public Builder clearMacAddr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        macAddr_ = getDefaultInstance().getMacAddr();
        onChanged();
        return this;
      }
      void setMacAddr(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        macAddr_ = value;
        onChanged();
      }
      
      // optional string serial_number = 2;
      private java.lang.Object serialNumber_ = "";
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getSerialNumber() {
        java.lang.Object ref = serialNumber_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          serialNumber_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSerialNumber(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }
      void setSerialNumber(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        serialNumber_ = value;
        onChanged();
      }
      
      // optional string preset = 3;
      private java.lang.Object preset_ = "";
      public boolean hasPreset() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getPreset() {
        java.lang.Object ref = preset_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          preset_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPreset(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        preset_ = value;
        onChanged();
        return this;
      }
      public Builder clearPreset() {
        bitField0_ = (bitField0_ & ~0x00000004);
        preset_ = getDefaultInstance().getPreset();
        onChanged();
        return this;
      }
      void setPreset(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        preset_ = value;
        onChanged();
      }
      
      // optional bool compression_enabled = 100;
      private boolean compressionEnabled_ ;
      public boolean hasCompressionEnabled() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getCompressionEnabled() {
        return compressionEnabled_;
      }
      public Builder setCompressionEnabled(boolean value) {
        bitField0_ |= 0x00000008;
        compressionEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearCompressionEnabled() {
        bitField0_ = (bitField0_ & ~0x00000008);
        compressionEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional bool filters_enabled = 201;
      private boolean filtersEnabled_ ;
      public boolean hasFiltersEnabled() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getFiltersEnabled() {
        return filtersEnabled_;
      }
      public Builder setFiltersEnabled(boolean value) {
        bitField0_ |= 0x00000010;
        filtersEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearFiltersEnabled() {
        bitField0_ = (bitField0_ & ~0x00000010);
        filtersEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional uint32 notch_frequency_hz = 202;
      private int notchFrequencyHz_ ;
      public boolean hasNotchFrequencyHz() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getNotchFrequencyHz() {
        return notchFrequencyHz_;
      }
      public Builder setNotchFrequencyHz(int value) {
        bitField0_ |= 0x00000020;
        notchFrequencyHz_ = value;
        onChanged();
        return this;
      }
      public Builder clearNotchFrequencyHz() {
        bitField0_ = (bitField0_ & ~0x00000020);
        notchFrequencyHz_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 eeg_sample_frequency_hz = 203;
      private int eegSampleFrequencyHz_ ;
      public boolean hasEegSampleFrequencyHz() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getEegSampleFrequencyHz() {
        return eegSampleFrequencyHz_;
      }
      public Builder setEegSampleFrequencyHz(int value) {
        bitField0_ |= 0x00000040;
        eegSampleFrequencyHz_ = value;
        onChanged();
        return this;
      }
      public Builder clearEegSampleFrequencyHz() {
        bitField0_ = (bitField0_ & ~0x00000040);
        eegSampleFrequencyHz_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 eeg_output_frequency_hz = 204;
      private int eegOutputFrequencyHz_ ;
      public boolean hasEegOutputFrequencyHz() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getEegOutputFrequencyHz() {
        return eegOutputFrequencyHz_;
      }
      public Builder setEegOutputFrequencyHz(int value) {
        bitField0_ |= 0x00000080;
        eegOutputFrequencyHz_ = value;
        onChanged();
        return this;
      }
      public Builder clearEegOutputFrequencyHz() {
        bitField0_ = (bitField0_ & ~0x00000080);
        eegOutputFrequencyHz_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 eeg_samples_bitwidth = 205;
      private int eegSamplesBitwidth_ ;
      public boolean hasEegSamplesBitwidth() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getEegSamplesBitwidth() {
        return eegSamplesBitwidth_;
      }
      public Builder setEegSamplesBitwidth(int value) {
        bitField0_ |= 0x00000100;
        eegSamplesBitwidth_ = value;
        onChanged();
        return this;
      }
      public Builder clearEegSamplesBitwidth() {
        bitField0_ = (bitField0_ & ~0x00000100);
        eegSamplesBitwidth_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 eeg_channel_count = 206;
      private int eegChannelCount_ ;
      public boolean hasEegChannelCount() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getEegChannelCount() {
        return eegChannelCount_;
      }
      public Builder setEegChannelCount(int value) {
        bitField0_ |= 0x00000200;
        eegChannelCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearEegChannelCount() {
        bitField0_ = (bitField0_ & ~0x00000200);
        eegChannelCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional string eeg_channel_layout = 207;
      private java.lang.Object eegChannelLayout_ = "";
      public boolean hasEegChannelLayout() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getEegChannelLayout() {
        java.lang.Object ref = eegChannelLayout_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          eegChannelLayout_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEegChannelLayout(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        eegChannelLayout_ = value;
        onChanged();
        return this;
      }
      public Builder clearEegChannelLayout() {
        bitField0_ = (bitField0_ & ~0x00000400);
        eegChannelLayout_ = getDefaultInstance().getEegChannelLayout();
        onChanged();
        return this;
      }
      void setEegChannelLayout(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000400;
        eegChannelLayout_ = value;
        onChanged();
      }
      
      // optional uint32 eeg_downsample = 208;
      private int eegDownsample_ ;
      public boolean hasEegDownsample() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getEegDownsample() {
        return eegDownsample_;
      }
      public Builder setEegDownsample(int value) {
        bitField0_ |= 0x00000800;
        eegDownsample_ = value;
        onChanged();
        return this;
      }
      public Builder clearEegDownsample() {
        bitField0_ = (bitField0_ & ~0x00000800);
        eegDownsample_ = 0;
        onChanged();
        return this;
      }
      
      // optional .EEGUnits eeg_units = 209;
      private com.ix.basis.muse.MuseDataSerializer.EEGUnits eegUnits_ = com.ix.basis.muse.MuseDataSerializer.EEGUnits.EEG_MICROVOLTS;
      public boolean hasEegUnits() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public com.ix.basis.muse.MuseDataSerializer.EEGUnits getEegUnits() {
        return eegUnits_;
      }
      public Builder setEegUnits(com.ix.basis.muse.MuseDataSerializer.EEGUnits value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        eegUnits_ = value;
        onChanged();
        return this;
      }
      public Builder clearEegUnits() {
        bitField0_ = (bitField0_ & ~0x00001000);
        eegUnits_ = com.ix.basis.muse.MuseDataSerializer.EEGUnits.EEG_MICROVOLTS;
        onChanged();
        return this;
      }
      
      // repeated .HeadLocations eeg_locations = 210;
      private java.util.List<com.ix.basis.muse.MuseDataSerializer.HeadLocations> eegLocations_ =
        java.util.Collections.emptyList();
      private void ensureEegLocationsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          eegLocations_ = new java.util.ArrayList<com.ix.basis.muse.MuseDataSerializer.HeadLocations>(eegLocations_);
          bitField0_ |= 0x00002000;
        }
      }
      public java.util.List<com.ix.basis.muse.MuseDataSerializer.HeadLocations> getEegLocationsList() {
        return java.util.Collections.unmodifiableList(eegLocations_);
      }
      public int getEegLocationsCount() {
        return eegLocations_.size();
      }
      public com.ix.basis.muse.MuseDataSerializer.HeadLocations getEegLocations(int index) {
        return eegLocations_.get(index);
      }
      public Builder setEegLocations(
          int index, com.ix.basis.muse.MuseDataSerializer.HeadLocations value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEegLocationsIsMutable();
        eegLocations_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addEegLocations(com.ix.basis.muse.MuseDataSerializer.HeadLocations value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEegLocationsIsMutable();
        eegLocations_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllEegLocations(
          java.lang.Iterable<? extends com.ix.basis.muse.MuseDataSerializer.HeadLocations> values) {
        ensureEegLocationsIsMutable();
        super.addAll(values, eegLocations_);
        onChanged();
        return this;
      }
      public Builder clearEegLocations() {
        eegLocations_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      
      // optional float eeg_conversion_factor = 211;
      private float eegConversionFactor_ ;
      public boolean hasEegConversionFactor() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public float getEegConversionFactor() {
        return eegConversionFactor_;
      }
      public Builder setEegConversionFactor(float value) {
        bitField0_ |= 0x00004000;
        eegConversionFactor_ = value;
        onChanged();
        return this;
      }
      public Builder clearEegConversionFactor() {
        bitField0_ = (bitField0_ & ~0x00004000);
        eegConversionFactor_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float afe_gain = 212;
      private float afeGain_ ;
      public boolean hasAfeGain() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public float getAfeGain() {
        return afeGain_;
      }
      public Builder setAfeGain(float value) {
        bitField0_ |= 0x00008000;
        afeGain_ = value;
        onChanged();
        return this;
      }
      public Builder clearAfeGain() {
        bitField0_ = (bitField0_ & ~0x00008000);
        afeGain_ = 0F;
        onChanged();
        return this;
      }
      
      // optional bool drlref_data_enabled = 300;
      private boolean drlrefDataEnabled_ ;
      public boolean hasDrlrefDataEnabled() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public boolean getDrlrefDataEnabled() {
        return drlrefDataEnabled_;
      }
      public Builder setDrlrefDataEnabled(boolean value) {
        bitField0_ |= 0x00010000;
        drlrefDataEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearDrlrefDataEnabled() {
        bitField0_ = (bitField0_ & ~0x00010000);
        drlrefDataEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional float drlref_conversion_factor = 301;
      private float drlrefConversionFactor_ ;
      public boolean hasDrlrefConversionFactor() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public float getDrlrefConversionFactor() {
        return drlrefConversionFactor_;
      }
      public Builder setDrlrefConversionFactor(float value) {
        bitField0_ |= 0x00020000;
        drlrefConversionFactor_ = value;
        onChanged();
        return this;
      }
      public Builder clearDrlrefConversionFactor() {
        bitField0_ = (bitField0_ & ~0x00020000);
        drlrefConversionFactor_ = 0F;
        onChanged();
        return this;
      }
      
      // optional uint32 drlref_sample_frequency_hz = 302;
      private int drlrefSampleFrequencyHz_ ;
      public boolean hasDrlrefSampleFrequencyHz() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public int getDrlrefSampleFrequencyHz() {
        return drlrefSampleFrequencyHz_;
      }
      public Builder setDrlrefSampleFrequencyHz(int value) {
        bitField0_ |= 0x00040000;
        drlrefSampleFrequencyHz_ = value;
        onChanged();
        return this;
      }
      public Builder clearDrlrefSampleFrequencyHz() {
        bitField0_ = (bitField0_ & ~0x00040000);
        drlrefSampleFrequencyHz_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool acc_data_enabled = 400;
      private boolean accDataEnabled_ ;
      public boolean hasAccDataEnabled() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public boolean getAccDataEnabled() {
        return accDataEnabled_;
      }
      public Builder setAccDataEnabled(boolean value) {
        bitField0_ |= 0x00080000;
        accDataEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccDataEnabled() {
        bitField0_ = (bitField0_ & ~0x00080000);
        accDataEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional .AccelerometerUnits acc_units = 401;
      private com.ix.basis.muse.MuseDataSerializer.AccelerometerUnits accUnits_ = com.ix.basis.muse.MuseDataSerializer.AccelerometerUnits.ACC_GFORCE;
      public boolean hasAccUnits() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public com.ix.basis.muse.MuseDataSerializer.AccelerometerUnits getAccUnits() {
        return accUnits_;
      }
      public Builder setAccUnits(com.ix.basis.muse.MuseDataSerializer.AccelerometerUnits value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00100000;
        accUnits_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccUnits() {
        bitField0_ = (bitField0_ & ~0x00100000);
        accUnits_ = com.ix.basis.muse.MuseDataSerializer.AccelerometerUnits.ACC_GFORCE;
        onChanged();
        return this;
      }
      
      // optional float acc_conversion_factor = 402;
      private float accConversionFactor_ ;
      public boolean hasAccConversionFactor() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public float getAccConversionFactor() {
        return accConversionFactor_;
      }
      public Builder setAccConversionFactor(float value) {
        bitField0_ |= 0x00200000;
        accConversionFactor_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccConversionFactor() {
        bitField0_ = (bitField0_ & ~0x00200000);
        accConversionFactor_ = 0F;
        onChanged();
        return this;
      }
      
      // optional uint32 acc_sample_frequency_hz = 403;
      private int accSampleFrequencyHz_ ;
      public boolean hasAccSampleFrequencyHz() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      public int getAccSampleFrequencyHz() {
        return accSampleFrequencyHz_;
      }
      public Builder setAccSampleFrequencyHz(int value) {
        bitField0_ |= 0x00400000;
        accSampleFrequencyHz_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccSampleFrequencyHz() {
        bitField0_ = (bitField0_ & ~0x00400000);
        accSampleFrequencyHz_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool battery_data_enabled = 500;
      private boolean batteryDataEnabled_ ;
      public boolean hasBatteryDataEnabled() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      public boolean getBatteryDataEnabled() {
        return batteryDataEnabled_;
      }
      public Builder setBatteryDataEnabled(boolean value) {
        bitField0_ |= 0x00800000;
        batteryDataEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearBatteryDataEnabled() {
        bitField0_ = (bitField0_ & ~0x00800000);
        batteryDataEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional uint32 battery_percent_remaining = 501;
      private int batteryPercentRemaining_ ;
      public boolean hasBatteryPercentRemaining() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      public int getBatteryPercentRemaining() {
        return batteryPercentRemaining_;
      }
      public Builder setBatteryPercentRemaining(int value) {
        bitField0_ |= 0x01000000;
        batteryPercentRemaining_ = value;
        onChanged();
        return this;
      }
      public Builder clearBatteryPercentRemaining() {
        bitField0_ = (bitField0_ & ~0x01000000);
        batteryPercentRemaining_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 battery_millivolts = 502;
      private int batteryMillivolts_ ;
      public boolean hasBatteryMillivolts() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      public int getBatteryMillivolts() {
        return batteryMillivolts_;
      }
      public Builder setBatteryMillivolts(int value) {
        bitField0_ |= 0x02000000;
        batteryMillivolts_ = value;
        onChanged();
        return this;
      }
      public Builder clearBatteryMillivolts() {
        bitField0_ = (bitField0_ & ~0x02000000);
        batteryMillivolts_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool error_data_enabled = 600;
      private boolean errorDataEnabled_ ;
      public boolean hasErrorDataEnabled() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      public boolean getErrorDataEnabled() {
        return errorDataEnabled_;
      }
      public Builder setErrorDataEnabled(boolean value) {
        bitField0_ |= 0x04000000;
        errorDataEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearErrorDataEnabled() {
        bitField0_ = (bitField0_ & ~0x04000000);
        errorDataEnabled_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MuseConfig)
    }
    
    static {
      defaultInstance = new MuseConfig(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MuseConfig)
    public static final int MUSEDATA_FIELD_NUMBER = 103;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.ix.basis.muse.MuseDataSerializer.MuseData,
        com.ix.basis.muse.MuseDataSerializer.MuseConfig> museData = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.ix.basis.muse.MuseDataSerializer.MuseConfig.getDefaultInstance(),
          0,
          com.ix.basis.muse.MuseDataSerializer.MuseConfig.class,
          com.ix.basis.muse.MuseDataSerializer.MuseConfig.getDefaultInstance());
  }
  
  public interface DSPOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string type = 1;
    boolean hasType();
    String getType();
    
    // repeated float float_array = 2;
    java.util.List<java.lang.Float> getFloatArrayList();
    int getFloatArrayCount();
    float getFloatArray(int index);
    
    // repeated uint32 int_array = 3;
    java.util.List<java.lang.Integer> getIntArrayList();
    int getIntArrayCount();
    int getIntArray(int index);
  }
  public static final class DSP extends
      com.google.protobuf.GeneratedMessage
      implements DSPOrBuilder {
    // Use DSP.newBuilder() to construct.
    private DSP(Builder builder) {
      super(builder);
    }
    private DSP(boolean noInit) {}
    
    private static final DSP defaultInstance;
    public static DSP getDefaultInstance() {
      return defaultInstance;
    }
    
    public DSP getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_DSP_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ix.basis.muse.MuseDataSerializer.internal_static_DSP_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private java.lang.Object type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          type_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated float float_array = 2;
    public static final int FLOAT_ARRAY_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> floatArray_;
    public java.util.List<java.lang.Float>
        getFloatArrayList() {
      return floatArray_;
    }
    public int getFloatArrayCount() {
      return floatArray_.size();
    }
    public float getFloatArray(int index) {
      return floatArray_.get(index);
    }
    
    // repeated uint32 int_array = 3;
    public static final int INT_ARRAY_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> intArray_;
    public java.util.List<java.lang.Integer>
        getIntArrayList() {
      return intArray_;
    }
    public int getIntArrayCount() {
      return intArray_.size();
    }
    public int getIntArray(int index) {
      return intArray_.get(index);
    }
    
    private void initFields() {
      type_ = "";
      floatArray_ = java.util.Collections.emptyList();;
      intArray_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTypeBytes());
      }
      for (int i = 0; i < floatArray_.size(); i++) {
        output.writeFloat(2, floatArray_.get(i));
      }
      for (int i = 0; i < intArray_.size(); i++) {
        output.writeUInt32(3, intArray_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTypeBytes());
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatArrayList().size();
        size += dataSize;
        size += 1 * getFloatArrayList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intArray_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(intArray_.get(i));
        }
        size += dataSize;
        size += 1 * getIntArrayList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.ix.basis.muse.MuseDataSerializer.DSP parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.DSP parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.DSP parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.DSP parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.DSP parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.DSP parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.DSP parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.DSP parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.ix.basis.muse.MuseDataSerializer.DSP parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.ix.basis.muse.MuseDataSerializer.DSP parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ix.basis.muse.MuseDataSerializer.DSP prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.ix.basis.muse.MuseDataSerializer.DSPOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_DSP_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ix.basis.muse.MuseDataSerializer.internal_static_DSP_fieldAccessorTable;
      }
      
      // Construct using com.ix.basis.muse.MuseDataSerializer.DSP.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        floatArray_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        intArray_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ix.basis.muse.MuseDataSerializer.DSP.getDescriptor();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.DSP getDefaultInstanceForType() {
        return com.ix.basis.muse.MuseDataSerializer.DSP.getDefaultInstance();
      }
      
      public com.ix.basis.muse.MuseDataSerializer.DSP build() {
        com.ix.basis.muse.MuseDataSerializer.DSP result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.ix.basis.muse.MuseDataSerializer.DSP buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.ix.basis.muse.MuseDataSerializer.DSP result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.ix.basis.muse.MuseDataSerializer.DSP buildPartial() {
        com.ix.basis.muse.MuseDataSerializer.DSP result = new com.ix.basis.muse.MuseDataSerializer.DSP(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          floatArray_ = java.util.Collections.unmodifiableList(floatArray_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.floatArray_ = floatArray_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          intArray_ = java.util.Collections.unmodifiableList(intArray_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.intArray_ = intArray_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ix.basis.muse.MuseDataSerializer.DSP) {
          return mergeFrom((com.ix.basis.muse.MuseDataSerializer.DSP)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.ix.basis.muse.MuseDataSerializer.DSP other) {
        if (other == com.ix.basis.muse.MuseDataSerializer.DSP.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.floatArray_.isEmpty()) {
          if (floatArray_.isEmpty()) {
            floatArray_ = other.floatArray_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFloatArrayIsMutable();
            floatArray_.addAll(other.floatArray_);
          }
          onChanged();
        }
        if (!other.intArray_.isEmpty()) {
          if (intArray_.isEmpty()) {
            intArray_ = other.intArray_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureIntArrayIsMutable();
            intArray_.addAll(other.intArray_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              type_ = input.readBytes();
              break;
            }
            case 21: {
              ensureFloatArrayIsMutable();
              floatArray_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFloatArray(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              ensureIntArrayIsMutable();
              intArray_.add(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addIntArray(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string type = 1;
      private java.lang.Object type_ = "";
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      void setType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
      }
      
      // repeated float float_array = 2;
      private java.util.List<java.lang.Float> floatArray_ = java.util.Collections.emptyList();;
      private void ensureFloatArrayIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          floatArray_ = new java.util.ArrayList<java.lang.Float>(floatArray_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Float>
          getFloatArrayList() {
        return java.util.Collections.unmodifiableList(floatArray_);
      }
      public int getFloatArrayCount() {
        return floatArray_.size();
      }
      public float getFloatArray(int index) {
        return floatArray_.get(index);
      }
      public Builder setFloatArray(
          int index, float value) {
        ensureFloatArrayIsMutable();
        floatArray_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addFloatArray(float value) {
        ensureFloatArrayIsMutable();
        floatArray_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllFloatArray(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatArrayIsMutable();
        super.addAll(values, floatArray_);
        onChanged();
        return this;
      }
      public Builder clearFloatArray() {
        floatArray_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // repeated uint32 int_array = 3;
      private java.util.List<java.lang.Integer> intArray_ = java.util.Collections.emptyList();;
      private void ensureIntArrayIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          intArray_ = new java.util.ArrayList<java.lang.Integer>(intArray_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getIntArrayList() {
        return java.util.Collections.unmodifiableList(intArray_);
      }
      public int getIntArrayCount() {
        return intArray_.size();
      }
      public int getIntArray(int index) {
        return intArray_.get(index);
      }
      public Builder setIntArray(
          int index, int value) {
        ensureIntArrayIsMutable();
        intArray_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addIntArray(int value) {
        ensureIntArrayIsMutable();
        intArray_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllIntArray(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntArrayIsMutable();
        super.addAll(values, intArray_);
        onChanged();
        return this;
      }
      public Builder clearIntArray() {
        intArray_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:DSP)
    }
    
    static {
      defaultInstance = new DSP(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DSP)
    public static final int MUSEDATA_FIELD_NUMBER = 200;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.ix.basis.muse.MuseDataSerializer.MuseData,
        com.ix.basis.muse.MuseDataSerializer.DSP> museData = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.ix.basis.muse.MuseDataSerializer.DSP.getDefaultInstance(),
          0,
          com.ix.basis.muse.MuseDataSerializer.DSP.class,
          com.ix.basis.muse.MuseDataSerializer.DSP.getDefaultInstance());
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MuseDataCollection_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MuseDataCollection_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MuseData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MuseData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EEG_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EEG_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MuseQuantization_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MuseQuantization_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Accelerometer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Accelerometer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Annotation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Annotation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Battery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Battery_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MuseVersion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MuseVersion_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MuseConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MuseConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DSP_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DSP_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rMuse_v2.proto\"3\n\022MuseDataCollection\022\035\n" +
      "\ncollection\030\001 \003(\0132\t.MuseData\"\355\001\n\010MuseDat" +
      "a\022\021\n\ttimestamp\030\001 \002(\001\022$\n\010datatype\030\002 \002(\0162\022" +
      ".MuseData.Datatype\022\021\n\tconfig_id\030\003 \001(\004\"\205\001" +
      "\n\010Datatype\022\007\n\003EEG\020\000\022\t\n\005QUANT\020\001\022\t\n\005ACCEL\020" +
      "\002\022\013\n\007BATTERY\020\003\022\013\n\007VERSION\020\004\022\n\n\006CONFIG\020\005\022" +
      "\016\n\nANNOTATION\020\006\022\r\n\tHISTOGRAM\020\007\022\014\n\010ALGVAL" +
      "UE\020\010\022\007\n\003DSP\020\t*\005\010\010\020\350\007*\006\010\350\007\020\200\020\"R\n\003EEG\022\016\n\006v" +
      "alues\030\002 \003(\002\022\013\n\003drl\030\005 \001(\002\022\013\n\003ref\030\006 \001(\0022!\n" +
      "\010museData\022\t.MuseData\030\010 \002(\0132\004.EEG\"R\n\020Muse",
      "Quantization\022\016\n\006values\030\001 \003(\r2.\n\010museData" +
      "\022\t.MuseData\030\t \002(\0132\021.MuseQuantization\"f\n\r" +
      "Accelerometer\022\014\n\004acc1\030\001 \001(\002\022\014\n\004acc2\030\002 \001(" +
      "\002\022\014\n\004acc3\030\003 \001(\0022+\n\010museData\022\t.MuseData\030\n" +
      " \002(\0132\016.Accelerometer\"\357\001\n\nAnnotation\022\022\n\ne" +
      "vent_data\030\001 \001(\t\022;\n\021event_data_format\030\002 \001" +
      "(\0162\022.Annotation.Format:\014PLAIN_STRING\022\022\n\n" +
      "event_type\030\003 \001(\t\022\020\n\010event_id\030\004 \001(\t\022\021\n\tpa" +
      "rent_id\030\005 \001(\t\"-\n\006Format\022\020\n\014PLAIN_STRING\020" +
      "\000\022\010\n\004JSON\020\001\022\007\n\003OSC\020\0022(\n\010museData\022\t.MuseD",
      "ata\030d \002(\0132\013.Annotation\"\257\001\n\007Battery\022\031\n\021pe" +
      "rcent_remaining\030\001 \001(\r\022%\n\035battery_fuel_ga" +
      "uge_millivolts\030\002 \001(\r\022\036\n\026battery_adc_mill" +
      "ivolts\030\003 \001(\r\022\033\n\023temperature_celsius\030\004 \001(" +
      "\0212%\n\010museData\022\t.MuseData\030e \002(\0132\010.Battery" +
      "\"\340\001\n\013MuseVersion\022\030\n\020hardware_version\030\001 \001" +
      "(\t\022 \n\030firmware_headset_version\030\002 \001(\t\022\025\n\r" +
      "firmware_type\030\003 \001(\t\022#\n\033firmware_bootload" +
      "er_version\030\004 \001(\t\022\024\n\014build_number\030\005 \001(\t\022\030" +
      "\n\020protocol_version\030\006 \001(\t2)\n\010museData\022\t.M",
      "useData\030f \002(\0132\014.MuseVersion\"\333\006\n\nMuseConf" +
      "ig\022\020\n\010mac_addr\030\001 \001(\t\022\025\n\rserial_number\030\002 " +
      "\001(\t\022\016\n\006preset\030\003 \001(\t\022\033\n\023compression_enabl" +
      "ed\030d \001(\010\022\030\n\017filters_enabled\030\311\001 \001(\010\022\033\n\022no" +
      "tch_frequency_hz\030\312\001 \001(\r\022 \n\027eeg_sample_fr" +
      "equency_hz\030\313\001 \001(\r\022 \n\027eeg_output_frequenc" +
      "y_hz\030\314\001 \001(\r\022\035\n\024eeg_samples_bitwidth\030\315\001 \001" +
      "(\r\022\032\n\021eeg_channel_count\030\316\001 \001(\r\022\033\n\022eeg_ch" +
      "annel_layout\030\317\001 \001(\t\022\027\n\016eeg_downsample\030\320\001" +
      " \001(\r\022\035\n\teeg_units\030\321\001 \001(\0162\t.EEGUnits\022&\n\re",
      "eg_locations\030\322\001 \003(\0162\016.HeadLocations\022\036\n\025e" +
      "eg_conversion_factor\030\323\001 \001(\002\022\021\n\010afe_gain\030" +
      "\324\001 \001(\002\022\034\n\023drlref_data_enabled\030\254\002 \001(\010\022!\n\030" +
      "drlref_conversion_factor\030\255\002 \001(\002\022#\n\032drlre" +
      "f_sample_frequency_hz\030\256\002 \001(\r\022\031\n\020acc_data" +
      "_enabled\030\220\003 \001(\010\022\'\n\tacc_units\030\221\003 \001(\0162\023.Ac" +
      "celerometerUnits\022\036\n\025acc_conversion_facto" +
      "r\030\222\003 \001(\002\022 \n\027acc_sample_frequency_hz\030\223\003 \001" +
      "(\r\022\035\n\024battery_data_enabled\030\364\003 \001(\010\022\"\n\031bat" +
      "tery_percent_remaining\030\365\003 \001(\r\022\033\n\022battery",
      "_millivolts\030\366\003 \001(\r\022\033\n\022error_data_enabled" +
      "\030\330\004 \001(\0102(\n\010museData\022\t.MuseData\030g \002(\0132\013.M" +
      "useConfig\"_\n\003DSP\022\014\n\004type\030\001 \001(\t\022\023\n\013float_" +
      "array\030\002 \003(\002\022\021\n\tint_array\030\003 \003(\r2\"\n\010museDa" +
      "ta\022\t.MuseData\030\310\001 \002(\0132\004.DSP*\336\005\n\rHeadLocat" +
      "ions\022\006\n\002NZ\020\001\022\007\n\003FP1\020\002\022\007\n\003FPZ\020\003\022\007\n\003FP2\020\004\022" +
      "\007\n\003AF7\020\005\022\007\n\003AF3\020\006\022\007\n\003AFZ\020\007\022\007\n\003AF4\020\010\022\007\n\003A" +
      "F8\020\t\022\006\n\002F9\020\n\022\006\n\002F7\020\013\022\006\n\002F5\020\014\022\006\n\002F3\020\r\022\006\n\002" +
      "F1\020\016\022\006\n\002FZ\020\017\022\006\n\002F2\020\020\022\006\n\002F4\020\021\022\006\n\002F6\020\022\022\006\n\002" +
      "F8\020\023\022\007\n\003F10\020\024\022\007\n\003FT9\020\025\022\007\n\003FT7\020\026\022\007\n\003FC5\020\027",
      "\022\007\n\003FC3\020\030\022\007\n\003FC1\020\031\022\007\n\003FCZ\020\032\022\007\n\003FC2\020\033\022\007\n\003" +
      "FC4\020\034\022\007\n\003FC6\020\035\022\007\n\003FT8\020\036\022\010\n\004FT10\020\037\022\006\n\002A1\020" +
      " \022\006\n\002T9\020!\022\006\n\002T7\020\"\022\006\n\002C5\020#\022\006\n\002C3\020$\022\006\n\002C1\020" +
      "%\022\006\n\002CZ\020&\022\006\n\002C2\020\'\022\006\n\002C4\020(\022\006\n\002C6\020)\022\006\n\002T8\020" +
      "*\022\007\n\003T10\020+\022\006\n\002A2\020,\022\007\n\003TP9\020-\022\007\n\003TP7\020.\022\007\n\003" +
      "CP5\020/\022\007\n\003CP3\0200\022\007\n\003CP1\0201\022\007\n\003CPZ\0202\022\007\n\003CP2\020" +
      "3\022\007\n\003CP4\0204\022\007\n\003CP6\0205\022\007\n\003TP8\0206\022\010\n\004TP10\0207\022\006" +
      "\n\002P9\0208\022\006\n\002P7\0209\022\006\n\002P5\020:\022\006\n\002P3\020;\022\006\n\002P1\020<\022\006" +
      "\n\002PZ\020=\022\006\n\002P2\020>\022\006\n\002P4\020?\022\006\n\002P6\020@\022\006\n\002P8\020A\022\007" +
      "\n\003P10\020B\022\007\n\003PO7\020C\022\007\n\003PO3\020D\022\007\n\003POZ\020E\022\007\n\003PO",
      "4\020F\022\007\n\003PO8\020G\022\006\n\002O1\020H\022\006\n\002OZ\020I\022\006\n\002O2\020J\022\006\n\002" +
      "IZ\020K\022\010\n\004AUX1\020L\022\010\n\004AUX2\020M\022\010\n\004AUX3\020N\022\010\n\004AU" +
      "X4\020O\022\021\n\rMUSE_LEFT_AUX\020P\022\022\n\016MUSE_RIGHT_AU" +
      "X\020Q*1\n\010EEGUnits\022\022\n\016EEG_MICROVOLTS\020\001\022\021\n\rE" +
      "EG_MUSE1_RAW\020\002*7\n\022AccelerometerUnits\022\016\n\n" +
      "ACC_GFORCE\020\001\022\021\n\rACC_MUSE1_RAW\020\002B\'\n\021com.i" +
      "x.basis.museB\022MuseDataSerializer"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_MuseDataCollection_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_MuseDataCollection_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MuseDataCollection_descriptor,
              new java.lang.String[] { "Collection", },
              com.ix.basis.muse.MuseDataSerializer.MuseDataCollection.class,
              com.ix.basis.muse.MuseDataSerializer.MuseDataCollection.Builder.class);
          internal_static_MuseData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_MuseData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MuseData_descriptor,
              new java.lang.String[] { "Timestamp", "Datatype", "ConfigId", },
              com.ix.basis.muse.MuseDataSerializer.MuseData.class,
              com.ix.basis.muse.MuseDataSerializer.MuseData.Builder.class);
          internal_static_EEG_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_EEG_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EEG_descriptor,
              new java.lang.String[] { "Values", "Drl", "Ref", },
              com.ix.basis.muse.MuseDataSerializer.EEG.class,
              com.ix.basis.muse.MuseDataSerializer.EEG.Builder.class);
          internal_static_MuseQuantization_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_MuseQuantization_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MuseQuantization_descriptor,
              new java.lang.String[] { "Values", },
              com.ix.basis.muse.MuseDataSerializer.MuseQuantization.class,
              com.ix.basis.muse.MuseDataSerializer.MuseQuantization.Builder.class);
          internal_static_Accelerometer_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_Accelerometer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Accelerometer_descriptor,
              new java.lang.String[] { "Acc1", "Acc2", "Acc3", },
              com.ix.basis.muse.MuseDataSerializer.Accelerometer.class,
              com.ix.basis.muse.MuseDataSerializer.Accelerometer.Builder.class);
          internal_static_Annotation_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_Annotation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Annotation_descriptor,
              new java.lang.String[] { "EventData", "EventDataFormat", "EventType", "EventId", "ParentId", },
              com.ix.basis.muse.MuseDataSerializer.Annotation.class,
              com.ix.basis.muse.MuseDataSerializer.Annotation.Builder.class);
          internal_static_Battery_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_Battery_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Battery_descriptor,
              new java.lang.String[] { "PercentRemaining", "BatteryFuelGaugeMillivolts", "BatteryAdcMillivolts", "TemperatureCelsius", },
              com.ix.basis.muse.MuseDataSerializer.Battery.class,
              com.ix.basis.muse.MuseDataSerializer.Battery.Builder.class);
          internal_static_MuseVersion_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_MuseVersion_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MuseVersion_descriptor,
              new java.lang.String[] { "HardwareVersion", "FirmwareHeadsetVersion", "FirmwareType", "FirmwareBootloaderVersion", "BuildNumber", "ProtocolVersion", },
              com.ix.basis.muse.MuseDataSerializer.MuseVersion.class,
              com.ix.basis.muse.MuseDataSerializer.MuseVersion.Builder.class);
          internal_static_MuseConfig_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_MuseConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MuseConfig_descriptor,
              new java.lang.String[] { "MacAddr", "SerialNumber", "Preset", "CompressionEnabled", "FiltersEnabled", "NotchFrequencyHz", "EegSampleFrequencyHz", "EegOutputFrequencyHz", "EegSamplesBitwidth", "EegChannelCount", "EegChannelLayout", "EegDownsample", "EegUnits", "EegLocations", "EegConversionFactor", "AfeGain", "DrlrefDataEnabled", "DrlrefConversionFactor", "DrlrefSampleFrequencyHz", "AccDataEnabled", "AccUnits", "AccConversionFactor", "AccSampleFrequencyHz", "BatteryDataEnabled", "BatteryPercentRemaining", "BatteryMillivolts", "ErrorDataEnabled", },
              com.ix.basis.muse.MuseDataSerializer.MuseConfig.class,
              com.ix.basis.muse.MuseDataSerializer.MuseConfig.Builder.class);
          internal_static_DSP_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_DSP_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DSP_descriptor,
              new java.lang.String[] { "Type", "FloatArray", "IntArray", },
              com.ix.basis.muse.MuseDataSerializer.DSP.class,
              com.ix.basis.muse.MuseDataSerializer.DSP.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
